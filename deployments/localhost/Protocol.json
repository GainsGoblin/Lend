{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardsRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_GLP",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lnxReward",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakeReward",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_GLPManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "GLP",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GLPManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GLPShare",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountBorrowedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountCollateralValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountHealth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountLentValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowShare",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "borrowingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowingPowerUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "debtValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "decimalMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralShareValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getShareValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTokenAccruedInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "interestCheckpoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "interestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lnxReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ltv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract IPriceFeed",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "repayAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsRouter",
      "outputs": [
        {
          "internalType": "contract IRewardsRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "share",
          "type": "address"
        }
      ],
      "name": "setBorrowToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "setBorrowTokenAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_GLPShare",
          "type": "address"
        }
      ],
      "name": "setGLPShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ltv",
          "type": "uint256"
        }
      ],
      "name": "setltv",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "totalBorrowedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLentValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "userDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "userDebtUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract IVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCollateralAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8ef471930555a868074443b2a66c2424204fe9e8535a37fad9f3317bf1c5525a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "5444137",
    "logsBloom": "0x
    "blockHash": "0x40ffa166f1e6cef6244ff22ae8b0dc0f7b24360db9407c330625e235525fea8c",
    "transactionHash": "0x8ef471930555a868074443b2a66c2424204fe9e8535a37fad9f3317bf1c5525a",
    "logs": [],
    "blockNumber": 3902500,
    "cumulativeGasUsed": "5444137",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x489ee077994B6658eAfA855C308275EAd8097C4A",
    "0xA906F338CB21815cBc4Bc87ace9e68c87eF8d8F1",
    "0x4277f8F2c384827B5273592FF7CeBd9f2C1ac258",
    "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "0x1CF4579904EB2ACDA0E4081E39eC10d0c32B5DE3",
    "0x321F653eED006AD1C29D174e17d96351BDe22649"
  ],
  "solcInputHash": "7467507eeaabd9695973a22b3f140a75",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_GLP\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lnxReward\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakeReward\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_GLPManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GLP\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GLPManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GLPShare\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountBorrowedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountHealth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountLentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowShare\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"borrowingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowingPowerUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"debtValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenAccruedInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"interestCheckpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"interestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lnxReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ltv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract IPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"repayAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsRouter\",\"outputs\":[{\"internalType\":\"contract IRewardsRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"share\",\"type\":\"address\"}],\"name\":\"setBorrowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setBorrowTokenAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_GLPShare\",\"type\":\"address\"}],\"name\":\"setGLPShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ltv\",\"type\":\"uint256\"}],\"name\":\"setltv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalBorrowedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"userDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"userDebtUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCollateralAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Protocol.sol\":\"Protocol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\"},\"contracts/Protocol.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function decimals() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n    function mint(address account, uint256 amount) external;\\n    function burn(address account, uint256 amount) external;\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\ninterface IVault {\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint) external view returns (address);\\n}\\n\\ninterface IPriceFeed {\\n    function getPrice(address, bool, bool, bool) external view returns (uint256);\\n}\\n\\ninterface IRewardsRouter {\\n    function unstakeAndRedeemGlp(address _tokenOut, uint256 _glpAmount, uint256 _minOut, address _receiver) external returns (uint256);\\n    function mintAndStakeGlp(address _token, uint256 _amount, uint256 _minUsdg, uint256 _minGlp) external returns (uint256);\\n    function handleRewards(\\n        bool _shouldClaimGmx,\\n        bool _shouldStakeGmx,\\n        bool _shouldClaimEsGmx,\\n        bool _shouldStakeEsGmx,\\n        bool _shouldStakeMultiplierPoints,\\n        bool _shouldClaimWeth,\\n        bool _shouldConvertWethToEth\\n    ) external;\\n}\\n\\ninterface ILNXReward {\\n    function claimRewards(address account) external;\\n}\\n\\ninterface IStakeReward {\\n    function receiveRewards(address token, uint amount) external;\\n}\\n\\ncontract Protocol {\\n\\n    using SafeMath for uint;\\n\\n    mapping(address => bool) public borrowToken; // Token allowed to be deposited/borrowed\\n    mapping(address => address) public borrowShare; // Share token from lent token\\n    mapping(address => uint) public borrowTokenBalance; // Tracks balance of lent tokens\\n\\n    mapping(address => uint) public decimalMultiplier; // Decimals needed to normalize to 1e18\\n    mapping(address => uint) public tokenDebt; // Tracks amount of tokens owed\\n    mapping(address => mapping(address => uint)) public borrowedAmount; // User debt\\n    mapping(address => uint) public interestCheckpoint; // Tracks token accrued interest using time\\n\\n    uint256 public totalCollateral; // Total GLP deposited\\n\\n    address public governance;\\n    IVault public vault;\\n    IRewardsRouter public rewardsRouter;\\n    IERC20 public GLPShare;\\n    IERC20 public GLP;\\n    address public weth;\\n    uint public ltv = 50; // 50 is 50% GLP LTV\\n    address public lnxReward;\\n    address public stakeReward;\\n    IPriceFeed public priceFeed;\\n    address public GLPManager;\\n\\n    constructor(\\n        address _vault,\\n        address _rewardsRouter,\\n        address _GLP,\\n        address _weth,\\n        address _lnxReward,\\n        address _stakeReward,\\n        address _priceFeed,\\n        address _GLPManager\\n    ) {\\n        governance = msg.sender;\\n        vault = IVault(_vault);\\n        rewardsRouter = IRewardsRouter(_rewardsRouter);\\n        GLP = IERC20(_GLP);\\n        weth = _weth;\\n        lnxReward = _lnxReward;\\n        stakeReward = _stakeReward;\\n        priceFeed = IPriceFeed(_priceFeed);\\n        GLPManager = _GLPManager;\\n    }\\n\\n\\n\\n    // End user functions\\n\\n    // If the user has fsGLP, it should be redeemed beforehand through a tx on frontend\\n    function depositCollateral(address token, uint256 amount) external {\\n        if (totalCollateral > 0) compound();\\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\\n        amount = rewardsRouter.mintAndStakeGlp(token, amount, 0, 1);\\n        uint amountToMint = amount.mul(1e18).div(getCollateralShareValue());\\n        IERC20(GLPShare).mint(msg.sender, amountToMint);\\n        totalCollateral += amount;\\n    }\\n\\n    function withdrawCollateralAll() external {\\n        require(accountBorrowedValue(msg.sender) == 0, \\\"Account has debt\\\");\\n        uint shareAmount = IERC20(GLPShare).balanceOf(msg.sender);\\n        withdrawCollateral(shareAmount);\\n    }\\n\\n    function withdrawCollateral(uint256 shareAmount) public returns (uint256) {\\n        IERC20(GLPShare).burn(msg.sender, shareAmount);\\n        uint amount = shareAmount.mul(getCollateralShareValue()).div(1e18);\\n        uint amountWithdrawn = rewardsRouter.unstakeAndRedeemGlp(weth, amount, 1, msg.sender);\\n        totalCollateral -= amount;\\n        require(accountHealth(msg.sender) >= 1e18, \\\"Account not healthy after withdraw\\\");\\n        return amountWithdrawn;\\n    }\\n    // rewardsRouter.mintAndStakeGlp() tx should be sent again through the frontend to mint GLP back to the user after withdrawing\\n    // because GLP isnt transferrable by unauthorized addresses.\\n    // Someone depositing GLP to this contract can also block withdrawals\\n    // because there is a 15 minute timer set between the ability to sell GLP after buying GLP\\n\\n    function lend(address token, uint256 amount) external {\\n        ILNXReward(lnxReward).claimRewards(msg.sender);\\n        uint transferAmount = amount;\\n        amount = amount.mul(10**(decimalMultiplier[token]));\\n        require(borrowToken[token] == true, \\\"Token not allowed\\\");\\n        uint amountToMint = amount.mul(1e18).div(getShareValue(token));\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        IERC20(token).transferFrom(msg.sender, address(this), transferAmount);\\n        IERC20(borrowShare[token]).mint(msg.sender, amountToMint);\\n        borrowTokenBalance[token] += amount;\\n    }\\n\\n    function withdrawAll(address token) external {\\n        uint shareAmount = IERC20(borrowShare[token]).balanceOf(msg.sender);\\n        withdraw(token, shareAmount);\\n    }\\n\\n    function withdraw(address token, uint256 shareAmount) public {\\n        ILNXReward(lnxReward).claimRewards(msg.sender);\\n        uint amountToSend = shareAmount.mul(getShareValue(token)).div(1e18);\\n        require(amountToSend > IERC20(token).balanceOf(address(this)).mul(10**decimalMultiplier[token]), \\\"Too much borrowed from liquidity to withdraw\\\");\\n        IERC20(borrowShare[token]).burn(msg.sender, shareAmount);\\n        borrowTokenBalance[token] -= amountToSend;\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;        \\n        IERC20(token).transfer(msg.sender, amountToSend.div(10**decimalMultiplier[token]));\\n    }\\n\\n    function borrow(address token, uint256 tokenAmount) external {\\n        require(borrowingPower(msg.sender, token) >= tokenAmount.mul(10**decimalMultiplier[token]), \\\"Not enough borrowing power\\\");\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        tokenDebt[token] += tokenAmount.mul(10**decimalMultiplier[token]); \\n        borrowedAmount[msg.sender][token] += tokenAmount.mul(uint(1e18).mul(10**decimalMultiplier[token])).div(debtValue(token));\\n        IERC20(token).transfer(msg.sender, tokenAmount);\\n    }\\n\\n    function repay(address token, uint256 tokenAmount) public {\\n        uint interestPaid = tokenAmount.sub(\\n            totalBorrowedAmount(token)\\n            .mul(IERC20(borrowShare[token]).balanceOf(msg.sender))\\n            .div(IERC20(borrowShare[token]).totalSupply())\\n        );\\n        require(tokenAmount.mul(10**decimalMultiplier[token]) <= userDebt(msg.sender, token), \\\"Repaying too much\\\");      \\n        borrowedAmount[msg.sender][token] -= tokenAmount.mul(1e18).mul(10**decimalMultiplier[token]).div(debtValue(token));\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        tokenDebt[token] -= tokenAmount.mul(10**decimalMultiplier[token]);\\n        IERC20(token).transferFrom(msg.sender, address(this), tokenAmount);\\n        IStakeReward(stakeReward).receiveRewards(token, interestPaid.div(4));\\n        borrowTokenBalance[token] += interestPaid.mul(3).div(4);\\n        compound();\\n    }\\n\\n    function repayAll(address token) external {\\n        repay(token, userDebt(msg.sender, token).div(10**decimalMultiplier[token]));\\n    }\\n\\n    function liquidate(address account) external {\\n        require(accountHealth(account) < 1e18, \\\"Account healthy\\\");\\n        uint256 usdLoansTotal = accountBorrowedValue(account);\\n        uint256 amount;\\n        address token;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            if (userDebtUSD(account, token) > 0) {\\n                token = vault.allWhitelistedTokens(i);\\n                amount = rewardsRouter.unstakeAndRedeemGlp(\\n                    token,\\n                    GLPShare.balanceOf(account).mul(getCollateralShareValue().div(1e18)).mul(userDebtUSD(account, token)).div(usdLoansTotal),\\n                    1,\\n                    address(this)\\n                );\\n                IERC20(token).transfer(msg.sender, amount.mul(5).div(100));\\n                IERC20(token).transfer(stakeReward, amount.mul(5).div(100));\\n                tokenDebt[token] += getTokenAccruedInterest(token);\\n                interestCheckpoint[token] = block.timestamp;\\n                borrowTokenBalance[token] -= borrowedAmount[account][token];\\n                borrowedAmount[account][token] = 0;\\n                borrowTokenBalance[token] += amount;\\n                tokenDebt[token] -= amount;\\n            }\\n        }\\n    }\\n\\n    function compound() internal {\\n        uint wethBefore = IERC20(weth).balanceOf(address(this));\\n        rewardsRouter.handleRewards(\\n            false,\\n            false,\\n            true,\\n            true,\\n            true,\\n            true,\\n            false\\n        );\\n        totalCollateral += rewardsRouter.mintAndStakeGlp(\\n            weth,\\n            IERC20(weth).balanceOf(address(this)).sub(wethBefore),\\n            1,\\n            1\\n        );\\n    }\\n\\n\\n\\n    // Governance functions\\n\\n    function setGovernance(address _governance) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        governance = _governance;\\n    }\\n\\n    function setBorrowToken(address token, address share) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(borrowShare[token] == address(0), \\\"!Governance\\\");\\n        borrowShare[token] = share;\\n        borrowToken[token] = true;\\n        decimalMultiplier[token] = uint(18).sub(IERC20(token).decimals());\\n        IERC20(token).approve(GLPManager, type(uint).max);\\n    }\\n\\n    function setBorrowTokenAllowed(address token, bool allowed) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        borrowToken[token] = allowed;\\n    }\\n\\n    function setltv(uint _ltv) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(_ltv <= 90 && _ltv >= 50, \\\"Invalid LTV\\\"); // Decreasing LTV can cause unfair liquidations, careful\\n        ltv = _ltv;\\n    }\\n\\n    function setGLPShare(address _GLPShare) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(address(GLPShare) == address(0), \\\"GLP Share already set!\\\");\\n        GLPShare = IERC20(_GLPShare);\\n    }\\n\\n\\n\\n    // View functions\\n\\n    // Value of a debt \\\"token\\\"\\n    function debtValue(address token) public view returns (uint256) { // 1e18 precision\\n        if (totalBorrowedAmount(token) == 0) return 1e18;\\n        return (tokenDebt[token].add(getTokenAccruedInterest(token))).mul(1e18).div(totalBorrowedAmount(token));\\n    }\\n\\n    // Interest on token since last checkpoint\\n    function getTokenAccruedInterest(address token) public view returns (uint256) { // 1e18 precision\\n        uint secondsBorrowed = block.timestamp.sub(interestCheckpoint[token]);\\n        uint interest = tokenDebt[token].mul(secondsBorrowed).div(31536000); // 31536000 seconds in a year\\n        return interest;\\n    }\\n\\n    // How many tokens does an user owe\\n    function userDebt(address account, address token) public view returns (uint256) {\\n        return borrowedAmount[account][token].mul(debtValue(token)).div(1e18);\\n    }\\n\\n    // How much USD does an user owe per token\\n    function userDebtUSD(address account, address token) public view returns (uint256) {\\n        return userDebt(account, token).mul(getLatestPrice(token)).div(1e18);\\n    }\\n\\n    // How many lent tokens is it's share token backed by\\n    function getShareValue(address token) public view returns (uint256) {\\n        if (IERC20(borrowShare[token]).totalSupply() == 0) return 1e18;\\n        return borrowTokenBalance[token].mul(1e18).div(IERC20(borrowShare[token]).totalSupply());\\n    }\\n\\n    // How many collateral tokens is it's share token backed by\\n    function getCollateralShareValue() public view returns(uint256) { // 1e18 precision\\n        if (IERC20(GLPShare).totalSupply() == 0) return 1e18;\\n        return totalCollateral.mul(1e18).div(IERC20(GLPShare).totalSupply());\\n    }\\n\\n    // Fetch the price of an asset from GMX price feed contract\\n    function getLatestPrice(address token) private view returns (uint) {\\n        uint price = priceFeed.getPrice(token, false, true, false);\\n        return price.div(1e12); // Normalize to 1e18\\n    }\\n\\n    // Price of GLP\\n    function getCollateralPrice() public view returns (uint) { // 1e18 precision\\n        uint totalValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            totalValue += getLatestPrice(vault.allWhitelistedTokens(i)).mul(IERC20(vault.allWhitelistedTokens(i)).balanceOf(address(vault)).mul(10**(decimalMultiplier[vault.allWhitelistedTokens(i)])));\\n        }\\n        uint price = totalValue.div(IERC20(GLP).totalSupply());\\n        return uint(price);\\n    }\\n\\n    // User's health factor\\n    function accountHealth(address account) public view returns (uint256) { // 1e18 precision\\n        if (accountBorrowedValue(account) == 0) return 100e18;\\n        if (accountCollateralValue(account).mul(1e18).div(accountBorrowedValue(account)) > 100e18) return 100e18;\\n        return accountCollateralValue(account).mul(1e18).div(accountBorrowedValue(account));\\n    }\\n\\n    // How much an user has borrowed in total in USD\\n    function accountBorrowedValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint totalBorrowedValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            totalBorrowedValue += userDebt(account, vault.allWhitelistedTokens(i)).mul(getLatestPrice(vault.allWhitelistedTokens(i))).div(1e18);\\n        }  \\n        return totalBorrowedValue;      \\n    }\\n\\n    // How much an user has lent in total in USD\\n    function accountLentValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint accountValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            address token = vault.allWhitelistedTokens(i);\\n            accountValue += borrowTokenBalance[token]\\n            .mul(IERC20(borrowShare[token]).balanceOf(account))\\n            .mul(getShareValue(token))\\n            .mul(getLatestPrice(token))\\n            .div(1e54);\\n        }  \\n        return accountValue;      \\n    }\\n\\n    // How much is lent in total in USD\\n    function totalLentValue() public view returns (uint256) { // 1e18 precision\\n        uint total;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            address token = vault.allWhitelistedTokens(i);\\n            total += borrowTokenBalance[token]\\n            .mul(getLatestPrice(token))\\n            .div(1e18);\\n        }  \\n        return total;      \\n    }\\n\\n    // Value of an user's collateral in USD\\n    function accountCollateralValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint totalCollateralValue = IERC20(GLPShare).balanceOf(account).mul(getCollateralShareValue()).mul(getCollateralPrice()).mul(ltv).div(1e36).div(100);\\n        return totalCollateralValue;    \\n    }\\n\\n    // Annual interest rate of borrowing a token\\n    function interestRate(address token) public view returns (uint256) { // 1e18 precision, %annual\\n        return totalBorrowedAmount(token).mul(1e18).div(borrowTokenBalance[token]);\\n    }\\n\\n    // How many tokens have been borrowed from liquidity\\n    function totalBorrowedAmount(address token) public view returns (uint256) {\\n        return borrowTokenBalance[token].sub(IERC20(token).balanceOf(address(this)).mul(10**decimalMultiplier[token]));\\n    }\\n\\n    // How many tokens can an user borrow\\n    function borrowingPower(address account, address token) public view returns (uint256) {\\n        return (accountCollateralValue(account).sub(accountBorrowedValue(account))).mul(1e18).div(getLatestPrice(token));\\n    }\\n\\n    // How much can an user borrow in USD\\n    function borrowingPowerUSD(address account) public view returns (uint256) {\\n        return accountCollateralValue(account).sub(accountBorrowedValue(account));\\n    }\\n}\",\"keccak256\":\"0x68b698d0a540401ad96e9782315407e4dd06b4bcfd1a494165edd4d1405b5ffe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 492,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowToken",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 496,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowShare",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 500,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowTokenBalance",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 504,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "decimalMultiplier",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 508,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "tokenDebt",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 514,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowedAmount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 518,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "interestCheckpoint",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 520,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "totalCollateral",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 522,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "governance",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 525,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "vault",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(IVault)413"
      },
      {
        "astId": 528,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "rewardsRouter",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IRewardsRouter)471"
      },
      {
        "astId": 531,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "GLPShare",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(IERC20)400"
      },
      {
        "astId": 534,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "GLP",
        "offset": 0,
        "slot": "12",
        "type": "t_contract(IERC20)400"
      },
      {
        "astId": 536,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "weth",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 539,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "ltv",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 541,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "lnxReward",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 543,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "stakeReward",
        "offset": 0,
        "slot": "16",
        "type": "t_address"
      },
      {
        "astId": 546,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "priceFeed",
        "offset": 0,
        "slot": "17",
        "type": "t_contract(IPriceFeed)427"
      },
      {
        "astId": 548,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "GLPManager",
        "offset": 0,
        "slot": "18",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)400": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceFeed)427": {
        "encoding": "inplace",
        "label": "contract IPriceFeed",
        "numberOfBytes": "20"
      },
      "t_contract(IRewardsRouter)471": {
        "encoding": "inplace",
        "label": "contract IRewardsRouter",
        "numberOfBytes": "20"
      },
      "t_contract(IVault)413": {
        "encoding": "inplace",
        "label": "contract IVault",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}