{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardsRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_GLP",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lnxReward",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakeReward",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "GLP",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GLPShare",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountBorrowedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountCollateralValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountHealth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountLentValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowShare",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "borrowingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowingPowerUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "debtValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "decimalMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralShareValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getShareValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTokenAccruedInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "interestCheckpoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "interestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lnxReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ltv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract IPriceFeed",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "repayAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsRouter",
      "outputs": [
        {
          "internalType": "contract IRewardsRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "share",
          "type": "address"
        }
      ],
      "name": "setBorrowToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "setBorrowTokenAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_GLPShare",
          "type": "address"
        }
      ],
      "name": "setGLPShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ltv",
          "type": "uint256"
        }
      ],
      "name": "setltv",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "totalBorrowedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLentValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "userDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "userDebtUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract IVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCollateralAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5841730c803f3e883ca59b086b1d0de178ee950a63297b214dca29dcef8cafb0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "5311659",
    "logsBloom": "0x
    "blockHash": "0xdf9035ccd12ae335a7ec5c9f6fa50a3201c8a9e7123c85f3d0539b5f810b1589",
    "transactionHash": "0x5841730c803f3e883ca59b086b1d0de178ee950a63297b214dca29dcef8cafb0",
    "logs": [],
    "blockNumber": 3879378,
    "cumulativeGasUsed": "5311659",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x489ee077994B6658eAfA855C308275EAd8097C4A",
    "0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064",
    "0x4277f8F2c384827B5273592FF7CeBd9f2C1ac258",
    "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "0x1CF4579904EB2ACDA0E4081E39eC10d0c32B5DE3"
  ],
  "solcInputHash": "3dd53c154c450ab0e6bdf487ad518b12",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_GLP\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lnxReward\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakeReward\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GLP\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GLPShare\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountBorrowedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountHealth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountLentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowShare\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"borrowingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowingPowerUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"debtValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenAccruedInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"interestCheckpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"interestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lnxReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ltv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract IPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"repayAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsRouter\",\"outputs\":[{\"internalType\":\"contract IRewardsRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"share\",\"type\":\"address\"}],\"name\":\"setBorrowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setBorrowTokenAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_GLPShare\",\"type\":\"address\"}],\"name\":\"setGLPShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ltv\",\"type\":\"uint256\"}],\"name\":\"setltv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalBorrowedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"userDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"userDebtUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCollateralAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Protocol.sol\":\"Protocol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\"},\"contracts/Protocol.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function decimals() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n    function mint(address account, uint256 amount) external;\\n    function burn(address account, uint256 amount) external;\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\ninterface IVault {\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint) external view returns (address);\\n}\\n\\ninterface IPriceFeed {\\n    function getPrice(address, bool, bool, bool) external view returns (uint256);\\n}\\n\\ninterface IRewardsRouter {\\n    function unstakeAndRedeemGlp(address _tokenOut, uint256 _glpAmount, uint256 _minOut, address _receiver) external returns (uint256);\\n    function mintAndStakeGlp(address _token, uint256 _amount, uint256 _minUsdg, uint256 _minGlp) external returns (uint256);\\n    function handleRewards(\\n        bool _shouldClaimGmx,\\n        bool _shouldStakeGmx,\\n        bool _shouldClaimEsGmx,\\n        bool _shouldStakeEsGmx,\\n        bool _shouldStakeMultiplierPoints,\\n        bool _shouldClaimWeth,\\n        bool _shouldConvertWethToEth\\n    ) external;\\n}\\n\\ninterface ILNXReward {\\n    function claimRewards(address account) external;\\n}\\n\\ninterface IStakeReward {\\n    function receiveRewards(address token, uint amount) external;\\n}\\n\\ncontract Protocol {\\n\\n    using SafeMath for uint;\\n\\n    mapping(address => bool) public borrowToken; // Token allowed to be deposited/borrowed\\n    mapping(address => address) public borrowShare; // Share token from lent token\\n    mapping(address => uint) public borrowTokenBalance; // Tracks balance of lent tokens\\n\\n    mapping(address => uint) public decimalMultiplier; // Decimals needed to normalize to 1e18\\n    mapping(address => uint) public tokenDebt; // Tracks amount of tokens owed\\n    mapping(address => mapping(address => uint)) public borrowedAmount; // User debt\\n    mapping(address => uint) public interestCheckpoint; // Tracks token accrued interest using time\\n\\n    uint256 public totalCollateral; // Total GLP deposited\\n\\n    address public governance;\\n    IVault public vault;\\n    IRewardsRouter public rewardsRouter;\\n    IERC20 public GLPShare;\\n    IERC20 public GLP;\\n    address public weth;\\n    uint public ltv = 50; // 50 is 50% GLP LTV\\n    address public lnxReward;\\n    address public stakeReward;\\n    IPriceFeed public priceFeed;\\n\\n    constructor(address _vault, address _rewardsRouter, address _GLP, address _weth, address _lnxReward, address _stakeReward, address _priceFeed) {\\n        governance = msg.sender;\\n        rewardsRouter = IRewardsRouter(_rewardsRouter);\\n        vault = IVault(_vault);\\n        GLP = IERC20(_GLP);\\n        weth = _weth;\\n        lnxReward = _lnxReward;\\n        stakeReward = _stakeReward;\\n        priceFeed = IPriceFeed(_priceFeed);\\n    }\\n\\n\\n\\n    // End user functions\\n\\n    // If the user has fsGLP, it should be redeemed beforehand through a tx on frontend\\n    function depositCollateral(address token, uint256 amount) external {\\n        compound();\\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\\n        amount = rewardsRouter.mintAndStakeGlp(token, amount, 1, 1);\\n        uint amountToMint = amount.mul(1e18).div(getCollateralShareValue());\\n        IERC20(GLPShare).mint(msg.sender, amountToMint);\\n        totalCollateral += amount;\\n    }\\n\\n    function withdrawCollateralAll() external {\\n        require(accountBorrowedValue(msg.sender) == 0, \\\"Account has debt\\\");\\n        uint shareAmount = IERC20(GLPShare).balanceOf(msg.sender);\\n        withdrawCollateral(shareAmount);\\n    }\\n\\n    function withdrawCollateral(uint256 shareAmount) public returns (uint256) {\\n        IERC20(GLPShare).burn(msg.sender, shareAmount);\\n        uint amount = shareAmount.mul(getCollateralShareValue()).div(1e18);\\n        uint amountWithdrawn = rewardsRouter.unstakeAndRedeemGlp(weth, amount, 1, msg.sender);\\n        totalCollateral -= amount;\\n        require(accountHealth(msg.sender) >= 1e18, \\\"Account not healthy after withdraw\\\");\\n        return amountWithdrawn;\\n    }\\n    // rewardsRouter.mintAndStakeGlp() tx should be sent again through the frontend to mint GLP back to the user after withdrawing\\n    // because GLP isnt transferrable by unauthorized addresses.\\n    // Someone depositing GLP to this contract can also block withdrawals\\n    // because there is a 15 minute timer set between the ability to sell GLP after buying GLP\\n\\n    function lend(address token, uint256 amount) external {\\n        ILNXReward(lnxReward).claimRewards(msg.sender);\\n        uint transferAmount = amount;\\n        amount = amount.mul(10**(decimalMultiplier[token]));\\n        require(borrowToken[token] == true, \\\"Token not allowed\\\");\\n        uint amountToMint = amount.mul(1e18).div(getShareValue(token));\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        IERC20(token).transferFrom(msg.sender, address(this), transferAmount);\\n        IERC20(borrowShare[token]).mint(msg.sender, amountToMint);\\n        borrowTokenBalance[token] += amount;\\n    }\\n\\n    function withdrawAll(address token) external {\\n        uint shareAmount = IERC20(borrowShare[token]).balanceOf(msg.sender);\\n        withdraw(token, shareAmount);\\n    }\\n\\n    function withdraw(address token, uint256 shareAmount) public {\\n        ILNXReward(lnxReward).claimRewards(msg.sender);\\n        uint amountToSend = shareAmount.mul(getShareValue(token)).div(1e18);\\n        require(amountToSend > IERC20(token).balanceOf(address(this)).mul(10**decimalMultiplier[token]), \\\"Too much borrowed from liquidity to withdraw\\\");\\n        IERC20(borrowShare[token]).burn(msg.sender, shareAmount);\\n        borrowTokenBalance[token] -= amountToSend;\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;        \\n        IERC20(token).transfer(msg.sender, amountToSend.div(10**decimalMultiplier[token]));\\n    }\\n\\n    function borrow(address token, uint256 tokenAmount) external {\\n        require(borrowingPower(msg.sender, token) >= tokenAmount.mul(10**decimalMultiplier[token]), \\\"Not enough borrowing power\\\");\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        tokenDebt[token] += tokenAmount.mul(10**decimalMultiplier[token]); \\n        borrowedAmount[msg.sender][token] += tokenAmount.mul(uint(1e18).mul(10**decimalMultiplier[token])).div(debtValue(token));\\n        IERC20(token).transfer(msg.sender, tokenAmount);\\n    }\\n\\n    function repay(address token, uint256 tokenAmount) public {\\n        uint interestPaid = tokenAmount.sub(\\n            totalBorrowedAmount(token)\\n            .mul(IERC20(borrowShare[token]).balanceOf(msg.sender))\\n            .div(IERC20(borrowShare[token]).totalSupply())\\n        );\\n        require(tokenAmount.mul(10**decimalMultiplier[token]) <= userDebt(msg.sender, token), \\\"Repaying too much\\\");      \\n        borrowedAmount[msg.sender][token] -= tokenAmount.mul(1e18).mul(10**decimalMultiplier[token]).div(debtValue(token));\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        tokenDebt[token] -= tokenAmount.mul(10**decimalMultiplier[token]);\\n        IERC20(token).transferFrom(msg.sender, address(this), tokenAmount);\\n        IStakeReward(stakeReward).receiveRewards(token, interestPaid.div(4));\\n        borrowTokenBalance[token] += interestPaid.mul(3).div(4);\\n        compound();\\n    }\\n\\n    function repayAll(address token) external {\\n        repay(token, userDebt(msg.sender, token).div(10**decimalMultiplier[token]));\\n    }\\n\\n    function liquidate(address account) external {\\n        require(accountHealth(account) < 1e18, \\\"Account healthy\\\");\\n        uint256 usdLoansTotal = accountBorrowedValue(account);\\n        uint256 amount;\\n        address token;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            if (userDebtUSD(account, token) > 0) {\\n                token = vault.allWhitelistedTokens(i);\\n                amount = rewardsRouter.unstakeAndRedeemGlp(\\n                    token,\\n                    GLPShare.balanceOf(account).mul(getCollateralShareValue().div(1e18)).mul(userDebtUSD(account, token)).div(usdLoansTotal),\\n                    1,\\n                    address(this)\\n                );\\n                IERC20(token).transfer(msg.sender, amount.mul(5).div(100));\\n                IERC20(token).transfer(stakeReward, amount.mul(5).div(100));\\n                tokenDebt[token] += getTokenAccruedInterest(token);\\n                interestCheckpoint[token] = block.timestamp;\\n                borrowTokenBalance[token] -= borrowedAmount[account][token];\\n                borrowedAmount[account][token] = 0;\\n                borrowTokenBalance[token] += amount;\\n                tokenDebt[token] -= amount;\\n            }\\n        }\\n    }\\n\\n    function compound() internal {\\n        uint wethBefore = IERC20(weth).balanceOf(address(this));\\n        rewardsRouter.handleRewards(\\n            false,\\n            false,\\n            true,\\n            true,\\n            true,\\n            true,\\n            false\\n        );\\n        totalCollateral += rewardsRouter.mintAndStakeGlp(\\n            weth,\\n            IERC20(weth).balanceOf(address(this)).sub(wethBefore),\\n            1,\\n            1\\n        );\\n    }\\n\\n\\n\\n    // Governance functions\\n\\n    function setGovernance(address _governance) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        governance = _governance;\\n    }\\n\\n    function setBorrowToken(address token, address share) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(borrowShare[token] == address(0), \\\"!Governance\\\");\\n        borrowShare[token] = share;\\n        borrowToken[token] = true;\\n        decimalMultiplier[token] = uint(18).sub(IERC20(token).decimals());\\n    }\\n\\n    function setBorrowTokenAllowed(address token, bool allowed) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        borrowToken[token] = allowed;\\n    }\\n\\n    function setltv(uint _ltv) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(_ltv <= 90 && _ltv >= 50, \\\"Invalid LTV\\\"); // Decreasing LTV can cause unfair liquidations, careful\\n        ltv = _ltv;\\n    }\\n\\n    function setGLPShare(address _GLPShare) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(address(GLPShare) == address(0), \\\"GLP Share already set!\\\");\\n        GLPShare = IERC20(_GLPShare);\\n    }\\n\\n\\n\\n    // View functions\\n\\n    // Value of a debt \\\"token\\\"\\n    function debtValue(address token) public view returns (uint256) { // 1e18 precision\\n        if (totalBorrowedAmount(token) == 0) return 1e18;\\n        return (tokenDebt[token].add(getTokenAccruedInterest(token))).mul(1e18).div(totalBorrowedAmount(token));\\n    }\\n\\n    // Interest on token since last checkpoint\\n    function getTokenAccruedInterest(address token) public view returns (uint256) { // 1e18 precision\\n        uint secondsBorrowed = block.timestamp.sub(interestCheckpoint[token]);\\n        uint interest = tokenDebt[token].mul(secondsBorrowed).div(31536000); // 31536000 seconds in a year\\n        return interest;\\n    }\\n\\n    // How many tokens does an user owe\\n    function userDebt(address account, address token) public view returns (uint256) {\\n        return borrowedAmount[account][token].mul(debtValue(token)).div(1e18);\\n    }\\n\\n    // How much USD does an user owe per token\\n    function userDebtUSD(address account, address token) public view returns (uint256) {\\n        return userDebt(account, token).mul(getLatestPrice(token)).div(1e18);\\n    }\\n\\n    // How many lent tokens is it's share token backed by\\n    function getShareValue(address token) public view returns (uint256) {\\n        if (IERC20(borrowShare[token]).totalSupply() == 0) return 1e18;\\n        return borrowTokenBalance[token].mul(1e18).div(IERC20(borrowShare[token]).totalSupply());\\n    }\\n\\n    // How many collateral tokens is it's share token backed by\\n    function getCollateralShareValue() public view returns(uint256) { // 1e18 precision\\n        if (IERC20(GLPShare).totalSupply() == 0) return 1e18;\\n        return totalCollateral.mul(1e18).div(IERC20(GLPShare).totalSupply());\\n    }\\n\\n    // Fetch the price of an asset from GMX price feed contract\\n    function getLatestPrice(address token) private view returns (uint) {\\n        uint price = priceFeed.getPrice(token, false, true, false);\\n        return price.div(1e12); // Normalize to 1e18\\n    }\\n\\n    // Price of GLP\\n    function getCollateralPrice() public view returns (uint) { // 1e18 precision\\n        uint totalValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            totalValue += getLatestPrice(vault.allWhitelistedTokens(i)).mul(IERC20(vault.allWhitelistedTokens(i)).balanceOf(address(vault)));\\n        }\\n        uint price = totalValue.mul(1e18).div(IERC20(GLP).totalSupply());\\n        return uint(price);\\n    }\\n\\n    // User's health factor\\n    function accountHealth(address account) public view returns (uint256) { // 1e18 precision\\n        if (accountBorrowedValue(account) == 0) return 100e18;\\n        if (accountCollateralValue(account).mul(1e18).div(accountBorrowedValue(account)) > 100e18) return 100e18;\\n        return accountCollateralValue(account).mul(1e18).div(accountBorrowedValue(account));\\n    }\\n\\n    // How much an user has borrowed in total in USD\\n    function accountBorrowedValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint totalBorrowedValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            totalBorrowedValue += userDebt(account, vault.allWhitelistedTokens(i)).mul(getLatestPrice(vault.allWhitelistedTokens(i))).div(1e18);\\n        }  \\n        return totalBorrowedValue;      \\n    }\\n\\n    // How much an user has lent in total in USD\\n    function accountLentValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint accountValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            address token = vault.allWhitelistedTokens(i);\\n            accountValue += borrowTokenBalance[token]\\n            .mul(IERC20(borrowShare[token]).balanceOf(account))\\n            .mul(getLatestPrice(token))\\n            .div(IERC20(borrowShare[token]).totalSupply())\\n            .div(1e18);\\n        }  \\n        return accountValue;      \\n    }\\n\\n    // How much is lent in total in USD\\n    function totalLentValue() public view returns (uint256) { // 1e18 precision\\n        uint total;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            address token = vault.allWhitelistedTokens(i);\\n            total += borrowTokenBalance[token]\\n            .mul(getLatestPrice(token))\\n            .div(1e18);\\n        }  \\n        return total;      \\n    }\\n\\n    // Value of an user's collateral in USD\\n    function accountCollateralValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint totalCollateralValue = IERC20(GLPShare).balanceOf(account).mul(getCollateralShareValue()).mul(getCollateralPrice()).mul(ltv).div(100);\\n        return totalCollateralValue;    \\n    }\\n\\n    // Annual interest rate of borrowing a token\\n    function interestRate(address token) public view returns (uint256) { // 1e18 precision, %annual\\n        return totalBorrowedAmount(token).mul(1e18).div(borrowTokenBalance[token]);\\n    }\\n\\n    // How many tokens have been borrowed from liquidity\\n    function totalBorrowedAmount(address token) public view returns (uint256) {\\n        return borrowTokenBalance[token].sub(IERC20(token).balanceOf(address(this)).mul(10**decimalMultiplier[token]));\\n    }\\n\\n    // How many tokens can an user borrow\\n    function borrowingPower(address account, address token) public view returns (uint256) {\\n        return accountBorrowedValue(account).mul(accountHealth(account)).div(getLatestPrice(token));\\n    }\\n\\n    // How much can an user borrow in USD\\n    function borrowingPowerUSD(address account) public view returns (uint256) {\\n        return accountBorrowedValue(account).mul(accountHealth(account)).div(1e18);\\n    }\\n}\",\"keccak256\":\"0x4f20dff313817f051579c432065c76dba1321f388790f5e9e150186f84375249\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526032600e553480156200001657600080fd5b5060405162005edb38038062005edb83398181016040528101906200003c9190620002bb565b33600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050506200036e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002838262000256565b9050919050565b620002958162000276565b8114620002a157600080fd5b50565b600081519050620002b5816200028a565b92915050565b600080600080600080600060e0888a031215620002dd57620002dc62000251565b5b6000620002ed8a828b01620002a4565b9750506020620003008a828b01620002a4565b9650506040620003138a828b01620002a4565b9550506060620003268a828b01620002a4565b9450506080620003398a828b01620002a4565b93505060a06200034c8a828b01620002a4565b92505060c06200035f8a828b01620002a4565b91505092959891949750929550565b615b5d806200037e6000396000f3fe608060405234801561001057600080fd5b50600436106102ba5760003560e01c806388d595db11610182578063c09f66aa116100e9578063f18ea6d8116100a2578063f7683bbc1161007c578063f7683bbc14610941578063f9c019d51461095f578063fa09e6301461098f578063fbfa77cf146109ab576102ba565b8063f18ea6d8146108c5578063f3e1abe1146108f5578063f3fef3a314610925576102ba565b8063c09f66aa14610801578063c9f005af1461080b578063cc4c336b1461083b578063d196943c1461086b578063e152c34a14610889578063e68802e3146108a7576102ba565b8063a2fb342d1161013b578063a2fb342d14610741578063a5d5db0c1461075d578063ab033ea914610779578063afbff21214610795578063b28147d9146107b3578063b9637e49146107d1576102ba565b806388d595db1461064757806389e02a58146106635780638b96b280146106815780638f2b6270146106b157806397ea8605146106e1578063983ff61514610711576102ba565b80635aa6e67511610226578063741bef1a116101df578063741bef1a1461054d5780637558abc81461056b578063770089f11461059b5780637a8f4605146105cb5780637c27383b146105fb5780637c2c69c014610617576102ba565b80635aa6e675146104655780636112fe2e1461048357806368cb7e8d146104b35780636ac9ce6c146104cf5780636fb49d73146104ff578063726654381461051d576102ba565b80632f865568116102785780632f865568146103a55780633fc8cef3146103c15780634414e1af146103df578063474fefaa1461040f5780634ac8eb5f1461042b5780634b8a352914610449576102ba565b80623aadee146102bf57806314c8ad2c146102db57806314f47dcc1461030b57806322867d781461032957806323eafe1e146103455780632c9cbca214610375575b600080fd5b6102d960048036038101906102d49190614dbd565b6109c9565b005b6102f560048036038101906102f09190614dfd565b610ab3565b6040516103029190614e56565b60405180910390f35b610313610b6e565b6040516103209190614e80565b60405180910390f35b610343600480360381019061033e9190614ec7565b610b94565b005b61035f600480360381019061035a9190614dfd565b61124a565b60405161036c9190614e56565b60405180910390f35b61038f600480360381019061038a9190614f07565b611292565b60405161039c9190614e80565b60405180910390f35b6103bf60048036038101906103ba9190614f07565b6112c5565b005b6103c9611a3d565b6040516103d69190614e80565b60405180910390f35b6103f960048036038101906103f49190614f07565b611a63565b6040516104069190614e56565b60405180910390f35b61042960048036038101906104249190614dfd565b611e09565b005b610433612105565b6040516104409190614e56565b60405180910390f35b610463600480360381019061045e9190614ec7565b61210b565b005b61046d6124b0565b60405161047a9190614e80565b60405180910390f35b61049d60048036038101906104989190614f34565b6124d6565b6040516104aa9190614e56565b60405180910390f35b6104cd60048036038101906104c89190614f07565b6126e0565b005b6104e960048036038101906104e49190614f07565b612845565b6040516104f69190614e56565b60405180910390f35b610507612a81565b6040516105149190614e56565b60405180910390f35b61053760048036038101906105329190614dfd565b612a87565b6040516105449190614e56565b60405180910390f35b610555612aac565b6040516105629190614fc0565b60405180910390f35b61058560048036038101906105809190614f07565b612ad2565b6040516105929190614e56565b60405180910390f35b6105b560048036038101906105b09190614f07565b612aea565b6040516105c29190614e56565b60405180910390f35b6105e560048036038101906105e09190614f07565b612b02565b6040516105f29190614e56565b60405180910390f35b61061560048036038101906106109190614f07565b612c33565b005b610631600480360381019061062c9190614f07565b612ca6565b60405161063e9190614e56565b60405180910390f35b610661600480360381019061065c9190614f34565b612d23565b005b61066b612e0e565b6040516106789190614e80565b60405180910390f35b61069b60048036038101906106969190614f07565b612e34565b6040516106a89190614e56565b60405180910390f35b6106cb60048036038101906106c69190614f07565b612efa565b6040516106d89190614e56565b60405180910390f35b6106fb60048036038101906106f69190614f07565b612ffd565b6040516107089190614e56565b60405180910390f35b61072b60048036038101906107269190614f07565b6130ca565b6040516107389190614e56565b60405180910390f35b61075b60048036038101906107569190614ec7565b613110565b005b61077760048036038101906107729190614ec7565b613518565b005b610793600480360381019061078e9190614f07565b61372d565b005b61079d613801565b6040516107aa9190614ffc565b60405180910390f35b6107bb613827565b6040516107c89190614ffc565b60405180910390f35b6107eb60048036038101906107e69190614f07565b61384d565b6040516107f89190614e56565b60405180910390f35b610809613905565b005b61082560048036038101906108209190614dfd565b6139fd565b6040516108329190614e56565b60405180910390f35b61085560048036038101906108509190614f07565b613a44565b6040516108629190615026565b60405180910390f35b610873613a64565b6040516108809190614e56565b60405180910390f35b610891613c3f565b60405161089e9190615062565b60405180910390f35b6108af613c65565b6040516108bc9190614e56565b60405180910390f35b6108df60048036038101906108da9190614f07565b613dd4565b6040516108ec9190614e56565b60405180910390f35b61090f600480360381019061090a9190614f07565b613dec565b60405161091c9190614e56565b60405180910390f35b61093f600480360381019061093a9190614ec7565b613e04565b005b610949614287565b6040516109569190614e56565b60405180910390f35b61097960048036038101906109749190614f07565b6145fb565b6040516109869190614e56565b60405180910390f35b6109a960048036038101906109a49190614f07565b614823565b005b6109b361490e565b6040516109c0919061509e565b60405180910390f35b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5090615116565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000610b66670de0b6b3a7640000610b58610acd8561384d565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61494a90919063ffffffff16565b905092915050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d7a610d6b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a919061514b565b610d5d600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d059190614e80565b602060405180830381865afa158015610d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d46919061514b565b610d4f88612b02565b61493490919063ffffffff16565b61494a90919063ffffffff16565b8361496090919063ffffffff16565b9050610d863384610ab3565b610de4600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a610dd591906152da565b8461493490919063ffffffff16565b1115610e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1c90615371565b60405180910390fd5b610eb7610e318461384d565b610ea9600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a610e8091906152da565b610e9b670de0b6b3a76400008761493490919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f429190615391565b92505081905550610f5283612ffd565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa091906153c5565b9250508190555042600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611049600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61103a91906152da565b8361493490919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110979190615391565b925050819055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110db9392919061541b565b6020604051808303816000875af11580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190615467565b50601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639aa498648461117260048561494a90919063ffffffff16565b6040518363ffffffff1660e01b815260040161118f929190615494565b600060405180830381600087803b1580156111a957600080fd5b505af11580156111bd573d6000803e3d6000fd5b505050506111e860046111da60038461493490919063ffffffff16565b61494a90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461123691906153c5565b92505081905550611245614976565b505050565b600061128a670de0b6b3a764000061127c61126485614c42565b61126e8787610ab3565b61493490919063ffffffff16565b61494a90919063ffffffff16565b905092915050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a76400006112d782612e34565b10611317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130e90615509565b60405180910390fd5b600061132282612845565b905060008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb919061514b565b811015611a365760006113ce868461124a565b1115611a2357600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0826040518263ffffffff1660e01b815260040161142f9190614e56565b602060405180830381865afa15801561144c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611470919061553e565b9150600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f3aa554836115ad8761159f6114c28b8961124a565b6115916114e7670de0b6b3a76400006114d9613c65565b61494a90919063ffffffff16565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318f6040518263ffffffff1660e01b81526004016115429190614e80565b602060405180830381865afa15801561155f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611583919061514b565b61493490919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b6001306040518563ffffffff1660e01b81526004016115cf94939291906155a6565b6020604051808303816000875af11580156115ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611612919061514b565b92508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33611658606461164a60058961493490919063ffffffff16565b61494a90919063ffffffff16565b6040518363ffffffff1660e01b8152600401611675929190615494565b6020604051808303816000875af1158015611694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b89190615467565b508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661171f606461171160058961493490919063ffffffff16565b61494a90919063ffffffff16565b6040518363ffffffff1660e01b815260040161173c929190615494565b6020604051808303816000875af115801561175b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177f9190615467565b5061178982612ffd565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117d791906153c5565b9250508190555042600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118ed9190615391565b925050819055506000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119c591906153c5565b9250508190555082600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a1b9190615391565b925050819055505b8080611a2e906155eb565b91505061132a565b5050505050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afa919061514b565b811015611dff576000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0836040518263ffffffff1660e01b8152600401611b5e9190614e56565b602060405180830381865afa158015611b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9f919061553e565b9050611dde670de0b6b3a7640000611dd0600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7e919061514b565b611dc2611c8a86614c42565b611db4600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318d6040518263ffffffff1660e01b8152600401611d259190614e80565b602060405180830381865afa158015611d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d66919061514b565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b61494a90919063ffffffff16565b83611de991906153c5565b9250508080611df7906155eb565b915050611a69565b5080915050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9090615116565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5e90615116565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506120be8273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561208a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ae919061514b565b601261496090919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60075481565b612169600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61215a91906152da565b8261493490919063ffffffff16565b61217333846139fd565b10156121b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ab90615680565b60405180910390fd5b6121bd82612ffd565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461220b91906153c5565b9250508190555042600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122b4600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a6122a591906152da565b8261493490919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461230291906153c5565b9250508190555061239b6123158361384d565b61238d61237e600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61236791906152da565b670de0b6b3a764000061493490919063ffffffff16565b8461493490919063ffffffff16565b61494a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461242691906153c5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401612468929190615494565b6020604051808303816000875af1158015612487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ab9190615467565b505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b8152600401612535929190615494565b600060405180830381600087803b15801561254f57600080fd5b505af1158015612563573d6000803e3d6000fd5b50505050600061259d670de0b6b3a764000061258f612580613c65565b8661493490919063ffffffff16565b61494a90919063ffffffff16565b90506000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f3aa554600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846001336040518563ffffffff1660e01b815260040161262594939291906155a6565b6020604051808303816000875af1158015612644573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612668919061514b565b9050816007600082825461267c9190615391565b92505081905550670de0b6b3a764000061269533612e34565b10156126d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126cd90615712565b60405180910390fd5b8092505050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276790615116565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127f89061577e565b60405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128dc919061514b565b811015612a7757612a57670de0b6b3a7640000612a49612996600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0866040518263ffffffff1660e01b81526004016129509190614e56565b602060405180830381865afa15801561296d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612991919061553e565b614c42565b612a3b88600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0886040518263ffffffff1660e01b81526004016129f59190614e56565b602060405180830381865afa158015612a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a36919061553e565b610ab3565b61493490919063ffffffff16565b61494a90919063ffffffff16565b82612a6291906153c5565b91508080612a6f906155eb565b91505061284b565b5080915050919050565b600e5481565b6005602052816000526040600020602052806000526040600020600091509150505481565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60026020528060005260406000206000915090505481565b6000612c2c612bde600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a612b5691906152da565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612b8f9190614e80565b602060405180830381865afa158015612bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd0919061514b565b61493490919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461496090919063ffffffff16565b9050919050565b612ca381612c9e600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a612c8691906152da565b612c903386610ab3565b61494a90919063ffffffff16565b610b94565b50565b6000612d1c600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d0e670de0b6b3a7640000612d0086612b02565b61493490919063ffffffff16565b61494a90919063ffffffff16565b9050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612daa90615116565b60405180910390fd5b605a8111158015612dc5575060328110155b612e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dfb906157ea565b60405180910390fd5b80600e8190555050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080612e4083612845565b1415612e575768056bc75e2d631000009050612ef5565b68056bc75e2d63100000612e9e612e6d84612845565b612e90670de0b6b3a7640000612e8287612efa565b61493490919063ffffffff16565b61494a90919063ffffffff16565b1115612eb55768056bc75e2d631000009050612ef5565b612ef2612ec183612845565b612ee4670de0b6b3a7640000612ed686612efa565b61493490919063ffffffff16565b61494a90919063ffffffff16565b90505b919050565b600080612ff26064612fe4600e54612fd6612f13614287565b612fc8612f1e613c65565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318c6040518263ffffffff1660e01b8152600401612f799190614e80565b602060405180830381865afa158015612f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fba919061514b565b61493490919063ffffffff16565b61493490919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b905080915050919050565b600080613052600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544261496090919063ffffffff16565b905060006130be6301e133806130b084600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61494a90919063ffffffff16565b90508092505050919050565b6000613109670de0b6b3a76400006130fb6130e485612e34565b6130ed86612845565b61493490919063ffffffff16565b61494a90919063ffffffff16565b9050919050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef5cfb8c336040518263ffffffff1660e01b815260040161316b9190614e80565b600060405180830381600087803b15801561318557600080fd5b505af1158015613199573d6000803e3d6000fd5b505050506000819050613200600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a6131f191906152da565b8361493490919063ffffffff16565b9150600115156000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514613294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161328b90615856565b60405180910390fd5b60006132cb6132a2856145fb565b6132bd670de0b6b3a76400008661493490919063ffffffff16565b61494a90919063ffffffff16565b90506132d684612ffd565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461332491906153c5565b9250508190555042600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016133ac9392919061541b565b6020604051808303816000875af11580156133cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133ef9190615467565b50600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161348a929190615494565b600060405180830381600087803b1580156134a457600080fd5b505af11580156134b8573d6000803e3d6000fd5b5050505082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461350b91906153c5565b9250508190555050505050565b613520614976565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161355d9392919061541b565b6020604051808303816000875af115801561357c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135a09190615467565b50600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663364e231183836001806040518563ffffffff1660e01b81526004016136039493929190615876565b6020604051808303816000875af1158015613622573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613646919061514b565b9050600061367e613655613c65565b613670670de0b6b3a76400008561493490919063ffffffff16565b61494a90919063ffffffff16565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016136dd929190615494565b600060405180830381600087803b1580156136f757600080fd5b505af115801561370b573d6000803e3d6000fd5b50505050816007600082825461372191906153c5565b92505081905550505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146137bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137b490615116565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061385983612b02565b141561386f57670de0b6b3a76400009050613900565b6138fd61387b83612b02565b6138ef670de0b6b3a76400006138e161389387612ffd565b600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614d0c90919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b90505b919050565b600061391033612845565b14613950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161394790615907565b60405180910390fd5b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016139ad9190614e80565b602060405180830381865afa1580156139ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139ee919061514b565b90506139f9816124d6565b5050565b6000613a3c613a0b83614c42565b613a2e613a1786612e34565b613a2087612845565b61493490919063ffffffff16565b61494a90919063ffffffff16565b905092915050565b60006020528060005260406000206000915054906101000a900460ff1681565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613afb919061514b565b811015613c37576000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0836040518263ffffffff1660e01b8152600401613b5f9190614e56565b602060405180830381865afa158015613b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ba0919061553e565b9050613c16670de0b6b3a7640000613c08613bba84614c42565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61494a90919063ffffffff16565b83613c2191906153c5565b9250508080613c2f906155eb565b915050613a6a565b508091505090565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613cd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cf9919061514b565b1415613d0f57670de0b6b3a76400009050613dd1565b613dce600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613da3919061514b565b613dc0670de0b6b3a764000060075461493490919063ffffffff16565b61494a90919063ffffffff16565b90505b90565b60036020528060005260406000206000915090505481565b60066020528060005260406000206000915090505481565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef5cfb8c336040518263ffffffff1660e01b8152600401613e5f9190614e80565b600060405180830381600087803b158015613e7957600080fd5b505af1158015613e8d573d6000803e3d6000fd5b505050506000613ec8670de0b6b3a7640000613eba613eab866145fb565b8561493490919063ffffffff16565b61494a90919063ffffffff16565b9050613fa1600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a613f1991906152da565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401613f529190614e80565b602060405180830381865afa158015613f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f93919061514b565b61493490919063ffffffff16565b8111613fe2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613fd990615999565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161407c929190615494565b600060405180830381600087803b15801561409657600080fd5b505af11580156140aa573d6000803e3d6000fd5b5050505080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546140fd9190615391565b9250508190555061410d83612ffd565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461415b91906153c5565b9250508190555042600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33614221600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61421291906152da565b8561494a90919063ffffffff16565b6040518363ffffffff1660e01b815260040161423e929190615494565b6020604051808303816000875af115801561425d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142819190615467565b50505050565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa1580156142fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061431e919061514b565b81101561453157614511600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0836040518263ffffffff1660e01b81526004016143839190614e56565b602060405180830381865afa1580156143a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143c4919061553e565b73ffffffffffffffffffffffffffffffffffffffff166370a08231600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161441e9190614e80565b602060405180830381865afa15801561443b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061445f919061514b565b614503600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0856040518263ffffffff1660e01b81526004016144bd9190614e56565b602060405180830381865afa1580156144da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144fe919061553e565b614c42565b61493490919063ffffffff16565b8261451c91906153c5565b91508080614529906155eb565b91505061428d565b5060006145f1600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156145a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145c8919061514b565b6145e3670de0b6b3a76400008561493490919063ffffffff16565b61494a90919063ffffffff16565b9050809250505090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156146a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146cc919061514b565b14156146e257670de0b6b3a7640000905061481e565b61481b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561478f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147b3919061514b565b61480d670de0b6b3a7640000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61494a90919063ffffffff16565b90505b919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016148bd9190614e80565b602060405180830381865afa1580156148da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148fe919061514b565b905061490a8282613e04565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818361494291906159b9565b905092915050565b600081836149589190615a42565b905092915050565b6000818361496e9190615391565b905092915050565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016149d39190614e80565b602060405180830381865afa1580156149f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a14919061514b565b9050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330b7000260008060018060018060006040518863ffffffff1660e01b8152600401614a819796959493929190615a73565b600060405180830381600087803b158015614a9b57600080fd5b505af1158015614aaf573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663364e2311600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614bc284600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401614b739190614e80565b602060405180830381865afa158015614b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614bb4919061514b565b61496090919063ffffffff16565b6001806040518563ffffffff1660e01b8152600401614be49493929190615876565b6020604051808303816000875af1158015614c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c27919061514b565b60076000828254614c3891906153c5565b9250508190555050565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632fc3a70a846000600160006040518563ffffffff1660e01b8152600401614ca99493929190615ae2565b602060405180830381865afa158015614cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614cea919061514b565b9050614d0464e8d4a510008261494a90919063ffffffff16565b915050919050565b60008183614d1a91906153c5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000614d5282614d27565b9050919050565b614d6281614d47565b8114614d6d57600080fd5b50565b600081359050614d7f81614d59565b92915050565b60008115159050919050565b614d9a81614d85565b8114614da557600080fd5b50565b600081359050614db781614d91565b92915050565b60008060408385031215614dd457614dd3614d22565b5b6000614de285828601614d70565b9250506020614df385828601614da8565b9150509250929050565b60008060408385031215614e1457614e13614d22565b5b6000614e2285828601614d70565b9250506020614e3385828601614d70565b9150509250929050565b6000819050919050565b614e5081614e3d565b82525050565b6000602082019050614e6b6000830184614e47565b92915050565b614e7a81614d47565b82525050565b6000602082019050614e956000830184614e71565b92915050565b614ea481614e3d565b8114614eaf57600080fd5b50565b600081359050614ec181614e9b565b92915050565b60008060408385031215614ede57614edd614d22565b5b6000614eec85828601614d70565b9250506020614efd85828601614eb2565b9150509250929050565b600060208284031215614f1d57614f1c614d22565b5b6000614f2b84828501614d70565b91505092915050565b600060208284031215614f4a57614f49614d22565b5b6000614f5884828501614eb2565b91505092915050565b6000819050919050565b6000614f86614f81614f7c84614d27565b614f61565b614d27565b9050919050565b6000614f9882614f6b565b9050919050565b6000614faa82614f8d565b9050919050565b614fba81614f9f565b82525050565b6000602082019050614fd56000830184614fb1565b92915050565b6000614fe682614f8d565b9050919050565b614ff681614fdb565b82525050565b60006020820190506150116000830184614fed565b92915050565b61502081614d85565b82525050565b600060208201905061503b6000830184615017565b92915050565b600061504c82614f8d565b9050919050565b61505c81615041565b82525050565b60006020820190506150776000830184615053565b92915050565b600061508882614f8d565b9050919050565b6150988161507d565b82525050565b60006020820190506150b3600083018461508f565b92915050565b600082825260208201905092915050565b7f21476f7665726e616e6365000000000000000000000000000000000000000000600082015250565b6000615100600b836150b9565b915061510b826150ca565b602082019050919050565b6000602082019050818103600083015261512f816150f3565b9050919050565b60008151905061514581614e9b565b92915050565b60006020828403121561516157615160614d22565b5b600061516f84828501615136565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156151fe578086048111156151da576151d9615178565b5b60018516156151e95780820291505b80810290506151f7856151a7565b94506151be565b94509492505050565b60008261521757600190506152d3565b8161522557600090506152d3565b816001811461523b576002811461524557615274565b60019150506152d3565b60ff84111561525757615256615178565b5b8360020a91508482111561526e5761526d615178565b5b506152d3565b5060208310610133831016604e8410600b84101617156152a95782820a9050838111156152a4576152a3615178565b5b6152d3565b6152b684848460016151b4565b925090508184048111156152cd576152cc615178565b5b81810290505b9392505050565b60006152e582614e3d565b91506152f083614e3d565b925061531d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484615207565b905092915050565b7f5265706179696e6720746f6f206d756368000000000000000000000000000000600082015250565b600061535b6011836150b9565b915061536682615325565b602082019050919050565b6000602082019050818103600083015261538a8161534e565b9050919050565b600061539c82614e3d565b91506153a783614e3d565b9250828210156153ba576153b9615178565b5b828203905092915050565b60006153d082614e3d565b91506153db83614e3d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156154105761540f615178565b5b828201905092915050565b60006060820190506154306000830186614e71565b61543d6020830185614e71565b61544a6040830184614e47565b949350505050565b60008151905061546181614d91565b92915050565b60006020828403121561547d5761547c614d22565b5b600061548b84828501615452565b91505092915050565b60006040820190506154a96000830185614e71565b6154b66020830184614e47565b9392505050565b7f4163636f756e74206865616c7468790000000000000000000000000000000000600082015250565b60006154f3600f836150b9565b91506154fe826154bd565b602082019050919050565b60006020820190508181036000830152615522816154e6565b9050919050565b60008151905061553881614d59565b92915050565b60006020828403121561555457615553614d22565b5b600061556284828501615529565b91505092915050565b6000819050919050565b600061559061558b6155868461556b565b614f61565b614e3d565b9050919050565b6155a081615575565b82525050565b60006080820190506155bb6000830187614e71565b6155c86020830186614e47565b6155d56040830185615597565b6155e26060830184614e71565b95945050505050565b60006155f682614e3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561562957615628615178565b5b600182019050919050565b7f4e6f7420656e6f75676820626f72726f77696e6720706f776572000000000000600082015250565b600061566a601a836150b9565b915061567582615634565b602082019050919050565b600060208201905081810360008301526156998161565d565b9050919050565b7f4163636f756e74206e6f74206865616c7468792061667465722077697468647260008201527f6177000000000000000000000000000000000000000000000000000000000000602082015250565b60006156fc6022836150b9565b9150615707826156a0565b604082019050919050565b6000602082019050818103600083015261572b816156ef565b9050919050565b7f474c5020536861726520616c7265616479207365742100000000000000000000600082015250565b60006157686016836150b9565b915061577382615732565b602082019050919050565b600060208201905081810360008301526157978161575b565b9050919050565b7f496e76616c6964204c5456000000000000000000000000000000000000000000600082015250565b60006157d4600b836150b9565b91506157df8261579e565b602082019050919050565b60006020820190508181036000830152615803816157c7565b9050919050565b7f546f6b656e206e6f7420616c6c6f776564000000000000000000000000000000600082015250565b60006158406011836150b9565b915061584b8261580a565b602082019050919050565b6000602082019050818103600083015261586f81615833565b9050919050565b600060808201905061588b6000830187614e71565b6158986020830186614e47565b6158a56040830185615597565b6158b26060830184615597565b95945050505050565b7f4163636f756e7420686173206465627400000000000000000000000000000000600082015250565b60006158f16010836150b9565b91506158fc826158bb565b602082019050919050565b60006020820190508181036000830152615920816158e4565b9050919050565b7f546f6f206d75636820626f72726f7765642066726f6d206c697175696469747960008201527f20746f2077697468647261770000000000000000000000000000000000000000602082015250565b6000615983602c836150b9565b915061598e82615927565b604082019050919050565b600060208201905081810360008301526159b281615976565b9050919050565b60006159c482614e3d565b91506159cf83614e3d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615a0857615a07615178565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000615a4d82614e3d565b9150615a5883614e3d565b925082615a6857615a67615a13565b5b828204905092915050565b600060e082019050615a88600083018a615017565b615a956020830189615017565b615aa26040830188615017565b615aaf6060830187615017565b615abc6080830186615017565b615ac960a0830185615017565b615ad660c0830184615017565b98975050505050505050565b6000608082019050615af76000830187614e71565b615b046020830186615017565b615b116040830185615017565b615b1e6060830184615017565b9594505050505056fea2646970667358221220ba521d83ea2b8fc5474566120ac2f7ddb70009523741ceceb7087bbbee32346764736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102ba5760003560e01c806388d595db11610182578063c09f66aa116100e9578063f18ea6d8116100a2578063f7683bbc1161007c578063f7683bbc14610941578063f9c019d51461095f578063fa09e6301461098f578063fbfa77cf146109ab576102ba565b8063f18ea6d8146108c5578063f3e1abe1146108f5578063f3fef3a314610925576102ba565b8063c09f66aa14610801578063c9f005af1461080b578063cc4c336b1461083b578063d196943c1461086b578063e152c34a14610889578063e68802e3146108a7576102ba565b8063a2fb342d1161013b578063a2fb342d14610741578063a5d5db0c1461075d578063ab033ea914610779578063afbff21214610795578063b28147d9146107b3578063b9637e49146107d1576102ba565b806388d595db1461064757806389e02a58146106635780638b96b280146106815780638f2b6270146106b157806397ea8605146106e1578063983ff61514610711576102ba565b80635aa6e67511610226578063741bef1a116101df578063741bef1a1461054d5780637558abc81461056b578063770089f11461059b5780637a8f4605146105cb5780637c27383b146105fb5780637c2c69c014610617576102ba565b80635aa6e675146104655780636112fe2e1461048357806368cb7e8d146104b35780636ac9ce6c146104cf5780636fb49d73146104ff578063726654381461051d576102ba565b80632f865568116102785780632f865568146103a55780633fc8cef3146103c15780634414e1af146103df578063474fefaa1461040f5780634ac8eb5f1461042b5780634b8a352914610449576102ba565b80623aadee146102bf57806314c8ad2c146102db57806314f47dcc1461030b57806322867d781461032957806323eafe1e146103455780632c9cbca214610375575b600080fd5b6102d960048036038101906102d49190614dbd565b6109c9565b005b6102f560048036038101906102f09190614dfd565b610ab3565b6040516103029190614e56565b60405180910390f35b610313610b6e565b6040516103209190614e80565b60405180910390f35b610343600480360381019061033e9190614ec7565b610b94565b005b61035f600480360381019061035a9190614dfd565b61124a565b60405161036c9190614e56565b60405180910390f35b61038f600480360381019061038a9190614f07565b611292565b60405161039c9190614e80565b60405180910390f35b6103bf60048036038101906103ba9190614f07565b6112c5565b005b6103c9611a3d565b6040516103d69190614e80565b60405180910390f35b6103f960048036038101906103f49190614f07565b611a63565b6040516104069190614e56565b60405180910390f35b61042960048036038101906104249190614dfd565b611e09565b005b610433612105565b6040516104409190614e56565b60405180910390f35b610463600480360381019061045e9190614ec7565b61210b565b005b61046d6124b0565b60405161047a9190614e80565b60405180910390f35b61049d60048036038101906104989190614f34565b6124d6565b6040516104aa9190614e56565b60405180910390f35b6104cd60048036038101906104c89190614f07565b6126e0565b005b6104e960048036038101906104e49190614f07565b612845565b6040516104f69190614e56565b60405180910390f35b610507612a81565b6040516105149190614e56565b60405180910390f35b61053760048036038101906105329190614dfd565b612a87565b6040516105449190614e56565b60405180910390f35b610555612aac565b6040516105629190614fc0565b60405180910390f35b61058560048036038101906105809190614f07565b612ad2565b6040516105929190614e56565b60405180910390f35b6105b560048036038101906105b09190614f07565b612aea565b6040516105c29190614e56565b60405180910390f35b6105e560048036038101906105e09190614f07565b612b02565b6040516105f29190614e56565b60405180910390f35b61061560048036038101906106109190614f07565b612c33565b005b610631600480360381019061062c9190614f07565b612ca6565b60405161063e9190614e56565b60405180910390f35b610661600480360381019061065c9190614f34565b612d23565b005b61066b612e0e565b6040516106789190614e80565b60405180910390f35b61069b60048036038101906106969190614f07565b612e34565b6040516106a89190614e56565b60405180910390f35b6106cb60048036038101906106c69190614f07565b612efa565b6040516106d89190614e56565b60405180910390f35b6106fb60048036038101906106f69190614f07565b612ffd565b6040516107089190614e56565b60405180910390f35b61072b60048036038101906107269190614f07565b6130ca565b6040516107389190614e56565b60405180910390f35b61075b60048036038101906107569190614ec7565b613110565b005b61077760048036038101906107729190614ec7565b613518565b005b610793600480360381019061078e9190614f07565b61372d565b005b61079d613801565b6040516107aa9190614ffc565b60405180910390f35b6107bb613827565b6040516107c89190614ffc565b60405180910390f35b6107eb60048036038101906107e69190614f07565b61384d565b6040516107f89190614e56565b60405180910390f35b610809613905565b005b61082560048036038101906108209190614dfd565b6139fd565b6040516108329190614e56565b60405180910390f35b61085560048036038101906108509190614f07565b613a44565b6040516108629190615026565b60405180910390f35b610873613a64565b6040516108809190614e56565b60405180910390f35b610891613c3f565b60405161089e9190615062565b60405180910390f35b6108af613c65565b6040516108bc9190614e56565b60405180910390f35b6108df60048036038101906108da9190614f07565b613dd4565b6040516108ec9190614e56565b60405180910390f35b61090f600480360381019061090a9190614f07565b613dec565b60405161091c9190614e56565b60405180910390f35b61093f600480360381019061093a9190614ec7565b613e04565b005b610949614287565b6040516109569190614e56565b60405180910390f35b61097960048036038101906109749190614f07565b6145fb565b6040516109869190614e56565b60405180910390f35b6109a960048036038101906109a49190614f07565b614823565b005b6109b361490e565b6040516109c0919061509e565b60405180910390f35b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5090615116565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000610b66670de0b6b3a7640000610b58610acd8561384d565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61494a90919063ffffffff16565b905092915050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d7a610d6b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a919061514b565b610d5d600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d059190614e80565b602060405180830381865afa158015610d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d46919061514b565b610d4f88612b02565b61493490919063ffffffff16565b61494a90919063ffffffff16565b8361496090919063ffffffff16565b9050610d863384610ab3565b610de4600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a610dd591906152da565b8461493490919063ffffffff16565b1115610e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1c90615371565b60405180910390fd5b610eb7610e318461384d565b610ea9600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a610e8091906152da565b610e9b670de0b6b3a76400008761493490919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f429190615391565b92505081905550610f5283612ffd565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa091906153c5565b9250508190555042600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611049600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61103a91906152da565b8361493490919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110979190615391565b925050819055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110db9392919061541b565b6020604051808303816000875af11580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190615467565b50601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639aa498648461117260048561494a90919063ffffffff16565b6040518363ffffffff1660e01b815260040161118f929190615494565b600060405180830381600087803b1580156111a957600080fd5b505af11580156111bd573d6000803e3d6000fd5b505050506111e860046111da60038461493490919063ffffffff16565b61494a90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461123691906153c5565b92505081905550611245614976565b505050565b600061128a670de0b6b3a764000061127c61126485614c42565b61126e8787610ab3565b61493490919063ffffffff16565b61494a90919063ffffffff16565b905092915050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a76400006112d782612e34565b10611317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130e90615509565b60405180910390fd5b600061132282612845565b905060008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb919061514b565b811015611a365760006113ce868461124a565b1115611a2357600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0826040518263ffffffff1660e01b815260040161142f9190614e56565b602060405180830381865afa15801561144c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611470919061553e565b9150600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f3aa554836115ad8761159f6114c28b8961124a565b6115916114e7670de0b6b3a76400006114d9613c65565b61494a90919063ffffffff16565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318f6040518263ffffffff1660e01b81526004016115429190614e80565b602060405180830381865afa15801561155f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611583919061514b565b61493490919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b6001306040518563ffffffff1660e01b81526004016115cf94939291906155a6565b6020604051808303816000875af11580156115ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611612919061514b565b92508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33611658606461164a60058961493490919063ffffffff16565b61494a90919063ffffffff16565b6040518363ffffffff1660e01b8152600401611675929190615494565b6020604051808303816000875af1158015611694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b89190615467565b508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661171f606461171160058961493490919063ffffffff16565b61494a90919063ffffffff16565b6040518363ffffffff1660e01b815260040161173c929190615494565b6020604051808303816000875af115801561175b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177f9190615467565b5061178982612ffd565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117d791906153c5565b9250508190555042600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118ed9190615391565b925050819055506000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119c591906153c5565b9250508190555082600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a1b9190615391565b925050819055505b8080611a2e906155eb565b91505061132a565b5050505050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afa919061514b565b811015611dff576000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0836040518263ffffffff1660e01b8152600401611b5e9190614e56565b602060405180830381865afa158015611b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9f919061553e565b9050611dde670de0b6b3a7640000611dd0600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7e919061514b565b611dc2611c8a86614c42565b611db4600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318d6040518263ffffffff1660e01b8152600401611d259190614e80565b602060405180830381865afa158015611d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d66919061514b565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b61494a90919063ffffffff16565b83611de991906153c5565b9250508080611df7906155eb565b915050611a69565b5080915050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9090615116565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5e90615116565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506120be8273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561208a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ae919061514b565b601261496090919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60075481565b612169600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61215a91906152da565b8261493490919063ffffffff16565b61217333846139fd565b10156121b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ab90615680565b60405180910390fd5b6121bd82612ffd565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461220b91906153c5565b9250508190555042600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122b4600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a6122a591906152da565b8261493490919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461230291906153c5565b9250508190555061239b6123158361384d565b61238d61237e600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61236791906152da565b670de0b6b3a764000061493490919063ffffffff16565b8461493490919063ffffffff16565b61494a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461242691906153c5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401612468929190615494565b6020604051808303816000875af1158015612487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ab9190615467565b505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b8152600401612535929190615494565b600060405180830381600087803b15801561254f57600080fd5b505af1158015612563573d6000803e3d6000fd5b50505050600061259d670de0b6b3a764000061258f612580613c65565b8661493490919063ffffffff16565b61494a90919063ffffffff16565b90506000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f3aa554600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846001336040518563ffffffff1660e01b815260040161262594939291906155a6565b6020604051808303816000875af1158015612644573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612668919061514b565b9050816007600082825461267c9190615391565b92505081905550670de0b6b3a764000061269533612e34565b10156126d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126cd90615712565b60405180910390fd5b8092505050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276790615116565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127f89061577e565b60405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128dc919061514b565b811015612a7757612a57670de0b6b3a7640000612a49612996600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0866040518263ffffffff1660e01b81526004016129509190614e56565b602060405180830381865afa15801561296d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612991919061553e565b614c42565b612a3b88600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0886040518263ffffffff1660e01b81526004016129f59190614e56565b602060405180830381865afa158015612a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a36919061553e565b610ab3565b61493490919063ffffffff16565b61494a90919063ffffffff16565b82612a6291906153c5565b91508080612a6f906155eb565b91505061284b565b5080915050919050565b600e5481565b6005602052816000526040600020602052806000526040600020600091509150505481565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60026020528060005260406000206000915090505481565b6000612c2c612bde600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a612b5691906152da565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612b8f9190614e80565b602060405180830381865afa158015612bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd0919061514b565b61493490919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461496090919063ffffffff16565b9050919050565b612ca381612c9e600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a612c8691906152da565b612c903386610ab3565b61494a90919063ffffffff16565b610b94565b50565b6000612d1c600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d0e670de0b6b3a7640000612d0086612b02565b61493490919063ffffffff16565b61494a90919063ffffffff16565b9050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612daa90615116565b60405180910390fd5b605a8111158015612dc5575060328110155b612e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dfb906157ea565b60405180910390fd5b80600e8190555050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080612e4083612845565b1415612e575768056bc75e2d631000009050612ef5565b68056bc75e2d63100000612e9e612e6d84612845565b612e90670de0b6b3a7640000612e8287612efa565b61493490919063ffffffff16565b61494a90919063ffffffff16565b1115612eb55768056bc75e2d631000009050612ef5565b612ef2612ec183612845565b612ee4670de0b6b3a7640000612ed686612efa565b61493490919063ffffffff16565b61494a90919063ffffffff16565b90505b919050565b600080612ff26064612fe4600e54612fd6612f13614287565b612fc8612f1e613c65565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318c6040518263ffffffff1660e01b8152600401612f799190614e80565b602060405180830381865afa158015612f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fba919061514b565b61493490919063ffffffff16565b61493490919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b905080915050919050565b600080613052600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544261496090919063ffffffff16565b905060006130be6301e133806130b084600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61494a90919063ffffffff16565b90508092505050919050565b6000613109670de0b6b3a76400006130fb6130e485612e34565b6130ed86612845565b61493490919063ffffffff16565b61494a90919063ffffffff16565b9050919050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef5cfb8c336040518263ffffffff1660e01b815260040161316b9190614e80565b600060405180830381600087803b15801561318557600080fd5b505af1158015613199573d6000803e3d6000fd5b505050506000819050613200600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a6131f191906152da565b8361493490919063ffffffff16565b9150600115156000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514613294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161328b90615856565b60405180910390fd5b60006132cb6132a2856145fb565b6132bd670de0b6b3a76400008661493490919063ffffffff16565b61494a90919063ffffffff16565b90506132d684612ffd565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461332491906153c5565b9250508190555042600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016133ac9392919061541b565b6020604051808303816000875af11580156133cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133ef9190615467565b50600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161348a929190615494565b600060405180830381600087803b1580156134a457600080fd5b505af11580156134b8573d6000803e3d6000fd5b5050505082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461350b91906153c5565b9250508190555050505050565b613520614976565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161355d9392919061541b565b6020604051808303816000875af115801561357c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135a09190615467565b50600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663364e231183836001806040518563ffffffff1660e01b81526004016136039493929190615876565b6020604051808303816000875af1158015613622573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613646919061514b565b9050600061367e613655613c65565b613670670de0b6b3a76400008561493490919063ffffffff16565b61494a90919063ffffffff16565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016136dd929190615494565b600060405180830381600087803b1580156136f757600080fd5b505af115801561370b573d6000803e3d6000fd5b50505050816007600082825461372191906153c5565b92505081905550505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146137bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137b490615116565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061385983612b02565b141561386f57670de0b6b3a76400009050613900565b6138fd61387b83612b02565b6138ef670de0b6b3a76400006138e161389387612ffd565b600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614d0c90919063ffffffff16565b61493490919063ffffffff16565b61494a90919063ffffffff16565b90505b919050565b600061391033612845565b14613950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161394790615907565b60405180910390fd5b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016139ad9190614e80565b602060405180830381865afa1580156139ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139ee919061514b565b90506139f9816124d6565b5050565b6000613a3c613a0b83614c42565b613a2e613a1786612e34565b613a2087612845565b61493490919063ffffffff16565b61494a90919063ffffffff16565b905092915050565b60006020528060005260406000206000915054906101000a900460ff1681565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613afb919061514b565b811015613c37576000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0836040518263ffffffff1660e01b8152600401613b5f9190614e56565b602060405180830381865afa158015613b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ba0919061553e565b9050613c16670de0b6b3a7640000613c08613bba84614c42565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61494a90919063ffffffff16565b83613c2191906153c5565b9250508080613c2f906155eb565b915050613a6a565b508091505090565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613cd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cf9919061514b565b1415613d0f57670de0b6b3a76400009050613dd1565b613dce600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613da3919061514b565b613dc0670de0b6b3a764000060075461493490919063ffffffff16565b61494a90919063ffffffff16565b90505b90565b60036020528060005260406000206000915090505481565b60066020528060005260406000206000915090505481565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef5cfb8c336040518263ffffffff1660e01b8152600401613e5f9190614e80565b600060405180830381600087803b158015613e7957600080fd5b505af1158015613e8d573d6000803e3d6000fd5b505050506000613ec8670de0b6b3a7640000613eba613eab866145fb565b8561493490919063ffffffff16565b61494a90919063ffffffff16565b9050613fa1600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a613f1991906152da565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401613f529190614e80565b602060405180830381865afa158015613f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f93919061514b565b61493490919063ffffffff16565b8111613fe2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613fd990615999565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161407c929190615494565b600060405180830381600087803b15801561409657600080fd5b505af11580156140aa573d6000803e3d6000fd5b5050505080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546140fd9190615391565b9250508190555061410d83612ffd565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461415b91906153c5565b9250508190555042600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33614221600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61421291906152da565b8561494a90919063ffffffff16565b6040518363ffffffff1660e01b815260040161423e929190615494565b6020604051808303816000875af115801561425d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142819190615467565b50505050565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa1580156142fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061431e919061514b565b81101561453157614511600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0836040518263ffffffff1660e01b81526004016143839190614e56565b602060405180830381865afa1580156143a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143c4919061553e565b73ffffffffffffffffffffffffffffffffffffffff166370a08231600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161441e9190614e80565b602060405180830381865afa15801561443b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061445f919061514b565b614503600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0856040518263ffffffff1660e01b81526004016144bd9190614e56565b602060405180830381865afa1580156144da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144fe919061553e565b614c42565b61493490919063ffffffff16565b8261451c91906153c5565b91508080614529906155eb565b91505061428d565b5060006145f1600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156145a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145c8919061514b565b6145e3670de0b6b3a76400008561493490919063ffffffff16565b61494a90919063ffffffff16565b9050809250505090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156146a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146cc919061514b565b14156146e257670de0b6b3a7640000905061481e565b61481b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561478f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147b3919061514b565b61480d670de0b6b3a7640000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461493490919063ffffffff16565b61494a90919063ffffffff16565b90505b919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016148bd9190614e80565b602060405180830381865afa1580156148da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148fe919061514b565b905061490a8282613e04565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818361494291906159b9565b905092915050565b600081836149589190615a42565b905092915050565b6000818361496e9190615391565b905092915050565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016149d39190614e80565b602060405180830381865afa1580156149f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a14919061514b565b9050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330b7000260008060018060018060006040518863ffffffff1660e01b8152600401614a819796959493929190615a73565b600060405180830381600087803b158015614a9b57600080fd5b505af1158015614aaf573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663364e2311600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614bc284600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401614b739190614e80565b602060405180830381865afa158015614b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614bb4919061514b565b61496090919063ffffffff16565b6001806040518563ffffffff1660e01b8152600401614be49493929190615876565b6020604051808303816000875af1158015614c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c27919061514b565b60076000828254614c3891906153c5565b9250508190555050565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632fc3a70a846000600160006040518563ffffffff1660e01b8152600401614ca99493929190615ae2565b602060405180830381865afa158015614cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614cea919061514b565b9050614d0464e8d4a510008261494a90919063ffffffff16565b915050919050565b60008183614d1a91906153c5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000614d5282614d27565b9050919050565b614d6281614d47565b8114614d6d57600080fd5b50565b600081359050614d7f81614d59565b92915050565b60008115159050919050565b614d9a81614d85565b8114614da557600080fd5b50565b600081359050614db781614d91565b92915050565b60008060408385031215614dd457614dd3614d22565b5b6000614de285828601614d70565b9250506020614df385828601614da8565b9150509250929050565b60008060408385031215614e1457614e13614d22565b5b6000614e2285828601614d70565b9250506020614e3385828601614d70565b9150509250929050565b6000819050919050565b614e5081614e3d565b82525050565b6000602082019050614e6b6000830184614e47565b92915050565b614e7a81614d47565b82525050565b6000602082019050614e956000830184614e71565b92915050565b614ea481614e3d565b8114614eaf57600080fd5b50565b600081359050614ec181614e9b565b92915050565b60008060408385031215614ede57614edd614d22565b5b6000614eec85828601614d70565b9250506020614efd85828601614eb2565b9150509250929050565b600060208284031215614f1d57614f1c614d22565b5b6000614f2b84828501614d70565b91505092915050565b600060208284031215614f4a57614f49614d22565b5b6000614f5884828501614eb2565b91505092915050565b6000819050919050565b6000614f86614f81614f7c84614d27565b614f61565b614d27565b9050919050565b6000614f9882614f6b565b9050919050565b6000614faa82614f8d565b9050919050565b614fba81614f9f565b82525050565b6000602082019050614fd56000830184614fb1565b92915050565b6000614fe682614f8d565b9050919050565b614ff681614fdb565b82525050565b60006020820190506150116000830184614fed565b92915050565b61502081614d85565b82525050565b600060208201905061503b6000830184615017565b92915050565b600061504c82614f8d565b9050919050565b61505c81615041565b82525050565b60006020820190506150776000830184615053565b92915050565b600061508882614f8d565b9050919050565b6150988161507d565b82525050565b60006020820190506150b3600083018461508f565b92915050565b600082825260208201905092915050565b7f21476f7665726e616e6365000000000000000000000000000000000000000000600082015250565b6000615100600b836150b9565b915061510b826150ca565b602082019050919050565b6000602082019050818103600083015261512f816150f3565b9050919050565b60008151905061514581614e9b565b92915050565b60006020828403121561516157615160614d22565b5b600061516f84828501615136565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156151fe578086048111156151da576151d9615178565b5b60018516156151e95780820291505b80810290506151f7856151a7565b94506151be565b94509492505050565b60008261521757600190506152d3565b8161522557600090506152d3565b816001811461523b576002811461524557615274565b60019150506152d3565b60ff84111561525757615256615178565b5b8360020a91508482111561526e5761526d615178565b5b506152d3565b5060208310610133831016604e8410600b84101617156152a95782820a9050838111156152a4576152a3615178565b5b6152d3565b6152b684848460016151b4565b925090508184048111156152cd576152cc615178565b5b81810290505b9392505050565b60006152e582614e3d565b91506152f083614e3d565b925061531d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484615207565b905092915050565b7f5265706179696e6720746f6f206d756368000000000000000000000000000000600082015250565b600061535b6011836150b9565b915061536682615325565b602082019050919050565b6000602082019050818103600083015261538a8161534e565b9050919050565b600061539c82614e3d565b91506153a783614e3d565b9250828210156153ba576153b9615178565b5b828203905092915050565b60006153d082614e3d565b91506153db83614e3d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156154105761540f615178565b5b828201905092915050565b60006060820190506154306000830186614e71565b61543d6020830185614e71565b61544a6040830184614e47565b949350505050565b60008151905061546181614d91565b92915050565b60006020828403121561547d5761547c614d22565b5b600061548b84828501615452565b91505092915050565b60006040820190506154a96000830185614e71565b6154b66020830184614e47565b9392505050565b7f4163636f756e74206865616c7468790000000000000000000000000000000000600082015250565b60006154f3600f836150b9565b91506154fe826154bd565b602082019050919050565b60006020820190508181036000830152615522816154e6565b9050919050565b60008151905061553881614d59565b92915050565b60006020828403121561555457615553614d22565b5b600061556284828501615529565b91505092915050565b6000819050919050565b600061559061558b6155868461556b565b614f61565b614e3d565b9050919050565b6155a081615575565b82525050565b60006080820190506155bb6000830187614e71565b6155c86020830186614e47565b6155d56040830185615597565b6155e26060830184614e71565b95945050505050565b60006155f682614e3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561562957615628615178565b5b600182019050919050565b7f4e6f7420656e6f75676820626f72726f77696e6720706f776572000000000000600082015250565b600061566a601a836150b9565b915061567582615634565b602082019050919050565b600060208201905081810360008301526156998161565d565b9050919050565b7f4163636f756e74206e6f74206865616c7468792061667465722077697468647260008201527f6177000000000000000000000000000000000000000000000000000000000000602082015250565b60006156fc6022836150b9565b9150615707826156a0565b604082019050919050565b6000602082019050818103600083015261572b816156ef565b9050919050565b7f474c5020536861726520616c7265616479207365742100000000000000000000600082015250565b60006157686016836150b9565b915061577382615732565b602082019050919050565b600060208201905081810360008301526157978161575b565b9050919050565b7f496e76616c6964204c5456000000000000000000000000000000000000000000600082015250565b60006157d4600b836150b9565b91506157df8261579e565b602082019050919050565b60006020820190508181036000830152615803816157c7565b9050919050565b7f546f6b656e206e6f7420616c6c6f776564000000000000000000000000000000600082015250565b60006158406011836150b9565b915061584b8261580a565b602082019050919050565b6000602082019050818103600083015261586f81615833565b9050919050565b600060808201905061588b6000830187614e71565b6158986020830186614e47565b6158a56040830185615597565b6158b26060830184615597565b95945050505050565b7f4163636f756e7420686173206465627400000000000000000000000000000000600082015250565b60006158f16010836150b9565b91506158fc826158bb565b602082019050919050565b60006020820190508181036000830152615920816158e4565b9050919050565b7f546f6f206d75636820626f72726f7765642066726f6d206c697175696469747960008201527f20746f2077697468647261770000000000000000000000000000000000000000602082015250565b6000615983602c836150b9565b915061598e82615927565b604082019050919050565b600060208201905081810360008301526159b281615976565b9050919050565b60006159c482614e3d565b91506159cf83614e3d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615a0857615a07615178565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000615a4d82614e3d565b9150615a5883614e3d565b925082615a6857615a67615a13565b5b828204905092915050565b600060e082019050615a88600083018a615017565b615a956020830189615017565b615aa26040830188615017565b615aaf6060830187615017565b615abc6080830186615017565b615ac960a0830185615017565b615ad660c0830184615017565b98975050505050505050565b6000608082019050615af76000830187614e71565b615b046020830186615017565b615b116040830185615017565b615b1e6060830184615017565b9594505050505056fea2646970667358221220ba521d83ea2b8fc5474566120ac2f7ddb70009523741ceceb7087bbbee32346764736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 492,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowToken",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 496,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowShare",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 500,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowTokenBalance",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 504,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "decimalMultiplier",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 508,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "tokenDebt",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 514,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowedAmount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 518,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "interestCheckpoint",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 520,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "totalCollateral",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 522,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "governance",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 525,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "vault",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(IVault)413"
      },
      {
        "astId": 528,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "rewardsRouter",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IRewardsRouter)471"
      },
      {
        "astId": 531,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "GLPShare",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(IERC20)400"
      },
      {
        "astId": 534,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "GLP",
        "offset": 0,
        "slot": "12",
        "type": "t_contract(IERC20)400"
      },
      {
        "astId": 536,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "weth",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 539,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "ltv",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 541,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "lnxReward",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 543,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "stakeReward",
        "offset": 0,
        "slot": "16",
        "type": "t_address"
      },
      {
        "astId": 546,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "priceFeed",
        "offset": 0,
        "slot": "17",
        "type": "t_contract(IPriceFeed)427"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)400": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceFeed)427": {
        "encoding": "inplace",
        "label": "contract IPriceFeed",
        "numberOfBytes": "20"
      },
      "t_contract(IRewardsRouter)471": {
        "encoding": "inplace",
        "label": "contract IRewardsRouter",
        "numberOfBytes": "20"
      },
      "t_contract(IVault)413": {
        "encoding": "inplace",
        "label": "contract IVault",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}