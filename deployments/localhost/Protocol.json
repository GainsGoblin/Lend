{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardsRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_GLP",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lnxReward",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakeReward",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "GLP",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GLPShare",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountBorrowedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountCollateralValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountHealth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accountLentValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowShare",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "borrowingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowingPowerUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "debtValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "decimalMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralShareValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getShareValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTokenAccruedInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "interestCheckpoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "interestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lnxReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ltv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract IPriceFeed",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "repayAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsRouter",
      "outputs": [
        {
          "internalType": "contract IRewardsRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "share",
          "type": "address"
        }
      ],
      "name": "setBorrowToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "setBorrowTokenAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_GLPShare",
          "type": "address"
        }
      ],
      "name": "setGLPShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ltv",
          "type": "uint256"
        }
      ],
      "name": "setltv",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "totalBorrowedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLentValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "userDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "userDebtUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract IVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCollateralAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x01f82ad93fc7c37209c06c9715eeb51651bb76d2babb8ad08a01c6091f0b99e6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "5396255",
    "logsBloom": "0x
    "blockHash": "0x9b121a8a4414081c3d4b456db105437853c9f5268b1e8e607720c00714b952c3",
    "transactionHash": "0x01f82ad93fc7c37209c06c9715eeb51651bb76d2babb8ad08a01c6091f0b99e6",
    "logs": [],
    "blockNumber": 3901819,
    "cumulativeGasUsed": "5396255",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x489ee077994B6658eAfA855C308275EAd8097C4A",
    "0xA906F338CB21815cBc4Bc87ace9e68c87eF8d8F1",
    "0x4277f8F2c384827B5273592FF7CeBd9f2C1ac258",
    "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "0x1CF4579904EB2ACDA0E4081E39eC10d0c32B5DE3"
  ],
  "solcInputHash": "e7690fcc42ea1dfd21b9eff9817bcd7a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_GLP\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lnxReward\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakeReward\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GLP\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GLPShare\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountBorrowedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountHealth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accountLentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowShare\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"borrowingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowingPowerUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"debtValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenAccruedInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"interestCheckpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"interestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lnxReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ltv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract IPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"repayAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsRouter\",\"outputs\":[{\"internalType\":\"contract IRewardsRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"share\",\"type\":\"address\"}],\"name\":\"setBorrowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setBorrowTokenAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_GLPShare\",\"type\":\"address\"}],\"name\":\"setGLPShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ltv\",\"type\":\"uint256\"}],\"name\":\"setltv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalBorrowedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"userDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"userDebtUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCollateralAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Protocol.sol\":\"Protocol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\"},\"contracts/Protocol.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function decimals() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n    function mint(address account, uint256 amount) external;\\n    function burn(address account, uint256 amount) external;\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\ninterface IVault {\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint) external view returns (address);\\n}\\n\\ninterface IPriceFeed {\\n    function getPrice(address, bool, bool, bool) external view returns (uint256);\\n}\\n\\ninterface IRewardsRouter {\\n    function unstakeAndRedeemGlp(address _tokenOut, uint256 _glpAmount, uint256 _minOut, address _receiver) external returns (uint256);\\n    function mintAndStakeGlp(address _token, uint256 _amount, uint256 _minUsdg, uint256 _minGlp) external returns (uint256);\\n    function handleRewards(\\n        bool _shouldClaimGmx,\\n        bool _shouldStakeGmx,\\n        bool _shouldClaimEsGmx,\\n        bool _shouldStakeEsGmx,\\n        bool _shouldStakeMultiplierPoints,\\n        bool _shouldClaimWeth,\\n        bool _shouldConvertWethToEth\\n    ) external;\\n}\\n\\ninterface ILNXReward {\\n    function claimRewards(address account) external;\\n}\\n\\ninterface IStakeReward {\\n    function receiveRewards(address token, uint amount) external;\\n}\\n\\ncontract Protocol {\\n\\n    using SafeMath for uint;\\n\\n    mapping(address => bool) public borrowToken; // Token allowed to be deposited/borrowed\\n    mapping(address => address) public borrowShare; // Share token from lent token\\n    mapping(address => uint) public borrowTokenBalance; // Tracks balance of lent tokens\\n\\n    mapping(address => uint) public decimalMultiplier; // Decimals needed to normalize to 1e18\\n    mapping(address => uint) public tokenDebt; // Tracks amount of tokens owed\\n    mapping(address => mapping(address => uint)) public borrowedAmount; // User debt\\n    mapping(address => uint) public interestCheckpoint; // Tracks token accrued interest using time\\n\\n    uint256 public totalCollateral; // Total GLP deposited\\n\\n    address public governance;\\n    IVault public vault;\\n    IRewardsRouter public rewardsRouter;\\n    IERC20 public GLPShare;\\n    IERC20 public GLP;\\n    address public weth;\\n    uint public ltv = 50; // 50 is 50% GLP LTV\\n    address public lnxReward;\\n    address public stakeReward;\\n    IPriceFeed public priceFeed;\\n\\n    constructor(address _vault, address _rewardsRouter, address _GLP, address _weth, address _lnxReward, address _stakeReward, address _priceFeed) {\\n        governance = msg.sender;\\n        rewardsRouter = IRewardsRouter(_rewardsRouter);\\n        vault = IVault(_vault);\\n        GLP = IERC20(_GLP);\\n        weth = _weth;\\n        lnxReward = _lnxReward;\\n        stakeReward = _stakeReward;\\n        priceFeed = IPriceFeed(_priceFeed);\\n    }\\n\\n\\n\\n    // End user functions\\n\\n    // If the user has fsGLP, it should be redeemed beforehand through a tx on frontend\\n    function depositCollateral(address token, uint256 amount) external {\\n        if (totalCollateral > 0) compound();\\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\\n        amount = rewardsRouter.mintAndStakeGlp(token, amount, 0, 1);\\n        uint amountToMint = amount.mul(1e18).div(getCollateralShareValue());\\n        IERC20(GLPShare).mint(msg.sender, amountToMint);\\n        totalCollateral += amount;\\n    }\\n\\n    function withdrawCollateralAll() external {\\n        require(accountBorrowedValue(msg.sender) == 0, \\\"Account has debt\\\");\\n        uint shareAmount = IERC20(GLPShare).balanceOf(msg.sender);\\n        withdrawCollateral(shareAmount);\\n    }\\n\\n    function withdrawCollateral(uint256 shareAmount) public returns (uint256) {\\n        IERC20(GLPShare).burn(msg.sender, shareAmount);\\n        uint amount = shareAmount.mul(getCollateralShareValue()).div(1e18);\\n        uint amountWithdrawn = rewardsRouter.unstakeAndRedeemGlp(weth, amount, 1, msg.sender);\\n        totalCollateral -= amount;\\n        require(accountHealth(msg.sender) >= 1e18, \\\"Account not healthy after withdraw\\\");\\n        return amountWithdrawn;\\n    }\\n    // rewardsRouter.mintAndStakeGlp() tx should be sent again through the frontend to mint GLP back to the user after withdrawing\\n    // because GLP isnt transferrable by unauthorized addresses.\\n    // Someone depositing GLP to this contract can also block withdrawals\\n    // because there is a 15 minute timer set between the ability to sell GLP after buying GLP\\n\\n    function lend(address token, uint256 amount) external {\\n        ILNXReward(lnxReward).claimRewards(msg.sender);\\n        uint transferAmount = amount;\\n        amount = amount.mul(10**(decimalMultiplier[token]));\\n        require(borrowToken[token] == true, \\\"Token not allowed\\\");\\n        uint amountToMint = amount.mul(1e18).div(getShareValue(token));\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        IERC20(token).transferFrom(msg.sender, address(this), transferAmount);\\n        IERC20(borrowShare[token]).mint(msg.sender, amountToMint);\\n        borrowTokenBalance[token] += amount;\\n    }\\n\\n    function withdrawAll(address token) external {\\n        uint shareAmount = IERC20(borrowShare[token]).balanceOf(msg.sender);\\n        withdraw(token, shareAmount);\\n    }\\n\\n    function withdraw(address token, uint256 shareAmount) public {\\n        ILNXReward(lnxReward).claimRewards(msg.sender);\\n        uint amountToSend = shareAmount.mul(getShareValue(token)).div(1e18);\\n        require(amountToSend > IERC20(token).balanceOf(address(this)).mul(10**decimalMultiplier[token]), \\\"Too much borrowed from liquidity to withdraw\\\");\\n        IERC20(borrowShare[token]).burn(msg.sender, shareAmount);\\n        borrowTokenBalance[token] -= amountToSend;\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;        \\n        IERC20(token).transfer(msg.sender, amountToSend.div(10**decimalMultiplier[token]));\\n    }\\n\\n    function borrow(address token, uint256 tokenAmount) external {\\n        require(borrowingPower(msg.sender, token) >= tokenAmount.mul(10**decimalMultiplier[token]), \\\"Not enough borrowing power\\\");\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        tokenDebt[token] += tokenAmount.mul(10**decimalMultiplier[token]); \\n        borrowedAmount[msg.sender][token] += tokenAmount.mul(uint(1e18).mul(10**decimalMultiplier[token])).div(debtValue(token));\\n        IERC20(token).transfer(msg.sender, tokenAmount);\\n    }\\n\\n    function repay(address token, uint256 tokenAmount) public {\\n        uint interestPaid = tokenAmount.sub(\\n            totalBorrowedAmount(token)\\n            .mul(IERC20(borrowShare[token]).balanceOf(msg.sender))\\n            .div(IERC20(borrowShare[token]).totalSupply())\\n        );\\n        require(tokenAmount.mul(10**decimalMultiplier[token]) <= userDebt(msg.sender, token), \\\"Repaying too much\\\");      \\n        borrowedAmount[msg.sender][token] -= tokenAmount.mul(1e18).mul(10**decimalMultiplier[token]).div(debtValue(token));\\n        tokenDebt[token] += getTokenAccruedInterest(token);\\n        interestCheckpoint[token] = block.timestamp;\\n        tokenDebt[token] -= tokenAmount.mul(10**decimalMultiplier[token]);\\n        IERC20(token).transferFrom(msg.sender, address(this), tokenAmount);\\n        IStakeReward(stakeReward).receiveRewards(token, interestPaid.div(4));\\n        borrowTokenBalance[token] += interestPaid.mul(3).div(4);\\n        compound();\\n    }\\n\\n    function repayAll(address token) external {\\n        repay(token, userDebt(msg.sender, token).div(10**decimalMultiplier[token]));\\n    }\\n\\n    function liquidate(address account) external {\\n        require(accountHealth(account) < 1e18, \\\"Account healthy\\\");\\n        uint256 usdLoansTotal = accountBorrowedValue(account);\\n        uint256 amount;\\n        address token;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            if (userDebtUSD(account, token) > 0) {\\n                token = vault.allWhitelistedTokens(i);\\n                amount = rewardsRouter.unstakeAndRedeemGlp(\\n                    token,\\n                    GLPShare.balanceOf(account).mul(getCollateralShareValue().div(1e18)).mul(userDebtUSD(account, token)).div(usdLoansTotal),\\n                    1,\\n                    address(this)\\n                );\\n                IERC20(token).transfer(msg.sender, amount.mul(5).div(100));\\n                IERC20(token).transfer(stakeReward, amount.mul(5).div(100));\\n                tokenDebt[token] += getTokenAccruedInterest(token);\\n                interestCheckpoint[token] = block.timestamp;\\n                borrowTokenBalance[token] -= borrowedAmount[account][token];\\n                borrowedAmount[account][token] = 0;\\n                borrowTokenBalance[token] += amount;\\n                tokenDebt[token] -= amount;\\n            }\\n        }\\n    }\\n\\n    function compound() internal {\\n        uint wethBefore = IERC20(weth).balanceOf(address(this));\\n        rewardsRouter.handleRewards(\\n            false,\\n            false,\\n            true,\\n            true,\\n            true,\\n            true,\\n            false\\n        );\\n        totalCollateral += rewardsRouter.mintAndStakeGlp(\\n            weth,\\n            IERC20(weth).balanceOf(address(this)).sub(wethBefore),\\n            1,\\n            1\\n        );\\n    }\\n\\n\\n\\n    // Governance functions\\n\\n    function setGovernance(address _governance) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        governance = _governance;\\n    }\\n\\n    function setBorrowToken(address token, address share) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(borrowShare[token] == address(0), \\\"!Governance\\\");\\n        borrowShare[token] = share;\\n        borrowToken[token] = true;\\n        decimalMultiplier[token] = uint(18).sub(IERC20(token).decimals());\\n        IERC20(token).approve(address(vault), type(uint).max);\\n    }\\n\\n    function setBorrowTokenAllowed(address token, bool allowed) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        borrowToken[token] = allowed;\\n    }\\n\\n    function setltv(uint _ltv) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(_ltv <= 90 && _ltv >= 50, \\\"Invalid LTV\\\"); // Decreasing LTV can cause unfair liquidations, careful\\n        ltv = _ltv;\\n    }\\n\\n    function setGLPShare(address _GLPShare) external {\\n        require(msg.sender == governance, \\\"!Governance\\\");\\n        require(address(GLPShare) == address(0), \\\"GLP Share already set!\\\");\\n        GLPShare = IERC20(_GLPShare);\\n    }\\n\\n\\n\\n    // View functions\\n\\n    // Value of a debt \\\"token\\\"\\n    function debtValue(address token) public view returns (uint256) { // 1e18 precision\\n        if (totalBorrowedAmount(token) == 0) return 1e18;\\n        return (tokenDebt[token].add(getTokenAccruedInterest(token))).mul(1e18).div(totalBorrowedAmount(token));\\n    }\\n\\n    // Interest on token since last checkpoint\\n    function getTokenAccruedInterest(address token) public view returns (uint256) { // 1e18 precision\\n        uint secondsBorrowed = block.timestamp.sub(interestCheckpoint[token]);\\n        uint interest = tokenDebt[token].mul(secondsBorrowed).div(31536000); // 31536000 seconds in a year\\n        return interest;\\n    }\\n\\n    // How many tokens does an user owe\\n    function userDebt(address account, address token) public view returns (uint256) {\\n        return borrowedAmount[account][token].mul(debtValue(token)).div(1e18);\\n    }\\n\\n    // How much USD does an user owe per token\\n    function userDebtUSD(address account, address token) public view returns (uint256) {\\n        return userDebt(account, token).mul(getLatestPrice(token)).div(1e18);\\n    }\\n\\n    // How many lent tokens is it's share token backed by\\n    function getShareValue(address token) public view returns (uint256) {\\n        if (IERC20(borrowShare[token]).totalSupply() == 0) return 1e18;\\n        return borrowTokenBalance[token].mul(1e18).div(IERC20(borrowShare[token]).totalSupply());\\n    }\\n\\n    // How many collateral tokens is it's share token backed by\\n    function getCollateralShareValue() public view returns(uint256) { // 1e18 precision\\n        if (IERC20(GLPShare).totalSupply() == 0) return 1e18;\\n        return totalCollateral.mul(1e18).div(IERC20(GLPShare).totalSupply());\\n    }\\n\\n    // Fetch the price of an asset from GMX price feed contract\\n    function getLatestPrice(address token) private view returns (uint) {\\n        uint price = priceFeed.getPrice(token, false, true, false);\\n        return price.div(1e12); // Normalize to 1e18\\n    }\\n\\n    // Price of GLP\\n    function getCollateralPrice() public view returns (uint) { // 1e18 precision\\n        uint totalValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            totalValue += getLatestPrice(vault.allWhitelistedTokens(i)).mul(IERC20(vault.allWhitelistedTokens(i)).balanceOf(address(vault)).mul(10**(decimalMultiplier[vault.allWhitelistedTokens(i)])));\\n        }\\n        uint price = totalValue.mul(1e18).div(IERC20(GLP).totalSupply());\\n        return uint(price);\\n    }\\n\\n    // User's health factor\\n    function accountHealth(address account) public view returns (uint256) { // 1e18 precision\\n        if (accountBorrowedValue(account) == 0) return 100e18;\\n        if (accountCollateralValue(account).mul(1e18).div(accountBorrowedValue(account)) > 100e18) return 100e18;\\n        return accountCollateralValue(account).mul(1e18).div(accountBorrowedValue(account));\\n    }\\n\\n    // How much an user has borrowed in total in USD\\n    function accountBorrowedValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint totalBorrowedValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            totalBorrowedValue += userDebt(account, vault.allWhitelistedTokens(i)).mul(getLatestPrice(vault.allWhitelistedTokens(i))).div(1e18);\\n        }  \\n        return totalBorrowedValue;      \\n    }\\n\\n    // How much an user has lent in total in USD\\n    function accountLentValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint accountValue;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            address token = vault.allWhitelistedTokens(i);\\n            accountValue += borrowTokenBalance[token]\\n            .mul(IERC20(borrowShare[token]).balanceOf(account))\\n            .mul(getShareValue(token))\\n            .mul(getLatestPrice(token))\\n            .div(1e36);\\n        }  \\n        return accountValue;      \\n    }\\n\\n    // How much is lent in total in USD\\n    function totalLentValue() public view returns (uint256) { // 1e18 precision\\n        uint total;\\n        for (uint i=0; i<vault.allWhitelistedTokensLength(); i++) {\\n            address token = vault.allWhitelistedTokens(i);\\n            total += borrowTokenBalance[token]\\n            .mul(getLatestPrice(token))\\n            .div(1e18);\\n        }  \\n        return total;      \\n    }\\n\\n    // Value of an user's collateral in USD\\n    function accountCollateralValue(address account) public view returns (uint256) { // 1e18 precision\\n        uint totalCollateralValue = IERC20(GLPShare).balanceOf(account).mul(getCollateralShareValue()).mul(getCollateralPrice()).mul(ltv).div(100);\\n        return totalCollateralValue;    \\n    }\\n\\n    // Annual interest rate of borrowing a token\\n    function interestRate(address token) public view returns (uint256) { // 1e18 precision, %annual\\n        return totalBorrowedAmount(token).mul(1e18).div(borrowTokenBalance[token]);\\n    }\\n\\n    // How many tokens have been borrowed from liquidity\\n    function totalBorrowedAmount(address token) public view returns (uint256) {\\n        return borrowTokenBalance[token].sub(IERC20(token).balanceOf(address(this)).mul(10**decimalMultiplier[token]));\\n    }\\n\\n    // How many tokens can an user borrow\\n    function borrowingPower(address account, address token) public view returns (uint256) {\\n        return (accountCollateralValue(account).sub(accountBorrowedValue(account))).mul(1e18).div(getLatestPrice(token));\\n    }\\n\\n    // How much can an user borrow in USD\\n    function borrowingPowerUSD(address account) public view returns (uint256) {\\n        return accountCollateralValue(account).sub(accountBorrowedValue(account));\\n    }\\n}\",\"keccak256\":\"0x71a6be3ba35a05d6c75d16c7f744b9ab60d7992f15efb78d8cc788be17cd684e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526032600e553480156200001657600080fd5b50604051620060633803806200606383398181016040528101906200003c9190620002bb565b33600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050506200036e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002838262000256565b9050919050565b620002958162000276565b8114620002a157600080fd5b50565b600081519050620002b5816200028a565b92915050565b600080600080600080600060e0888a031215620002dd57620002dc62000251565b5b6000620002ed8a828b01620002a4565b9750506020620003008a828b01620002a4565b9650506040620003138a828b01620002a4565b9550506060620003268a828b01620002a4565b9450506080620003398a828b01620002a4565b93505060a06200034c8a828b01620002a4565b92505060c06200035f8a828b01620002a4565b91505092959891949750929550565b615ce5806200037e6000396000f3fe608060405234801561001057600080fd5b50600436106102ba5760003560e01c806388d595db11610182578063c09f66aa116100e9578063f18ea6d8116100a2578063f7683bbc1161007c578063f7683bbc14610941578063f9c019d51461095f578063fa09e6301461098f578063fbfa77cf146109ab576102ba565b8063f18ea6d8146108c5578063f3e1abe1146108f5578063f3fef3a314610925576102ba565b8063c09f66aa14610801578063c9f005af1461080b578063cc4c336b1461083b578063d196943c1461086b578063e152c34a14610889578063e68802e3146108a7576102ba565b8063a2fb342d1161013b578063a2fb342d14610741578063a5d5db0c1461075d578063ab033ea914610779578063afbff21214610795578063b28147d9146107b3578063b9637e49146107d1576102ba565b806388d595db1461064757806389e02a58146106635780638b96b280146106815780638f2b6270146106b157806397ea8605146106e1578063983ff61514610711576102ba565b80635aa6e67511610226578063741bef1a116101df578063741bef1a1461054d5780637558abc81461056b578063770089f11461059b5780637a8f4605146105cb5780637c27383b146105fb5780637c2c69c014610617576102ba565b80635aa6e675146104655780636112fe2e1461048357806368cb7e8d146104b35780636ac9ce6c146104cf5780636fb49d73146104ff578063726654381461051d576102ba565b80632f865568116102785780632f865568146103a55780633fc8cef3146103c15780634414e1af146103df578063474fefaa1461040f5780634ac8eb5f1461042b5780634b8a352914610449576102ba565b80623aadee146102bf57806314c8ad2c146102db57806314f47dcc1461030b57806322867d781461032957806323eafe1e146103455780632c9cbca214610375575b600080fd5b6102d960048036038101906102d49190614ec5565b6109c9565b005b6102f560048036038101906102f09190614f05565b610ab3565b6040516103029190614f5e565b60405180910390f35b610313610b6e565b6040516103209190614f88565b60405180910390f35b610343600480360381019061033e9190614fcf565b610b94565b005b61035f600480360381019061035a9190614f05565b61124a565b60405161036c9190614f5e565b60405180910390f35b61038f600480360381019061038a919061500f565b611292565b60405161039c9190614f88565b60405180910390f35b6103bf60048036038101906103ba919061500f565b6112c5565b005b6103c9611a3d565b6040516103d69190614f88565b60405180910390f35b6103f960048036038101906103f4919061500f565b611a63565b6040516104069190614f5e565b60405180910390f35b61042960048036038101906104249190614f05565b611d4b565b005b610433612108565b6040516104409190614f5e565b60405180910390f35b610463600480360381019061045e9190614fcf565b61210e565b005b61046d6124b3565b60405161047a9190614f88565b60405180910390f35b61049d6004803603810190610498919061503c565b6124d9565b6040516104aa9190614f5e565b60405180910390f35b6104cd60048036038101906104c8919061500f565b6126e3565b005b6104e960048036038101906104e4919061500f565b612848565b6040516104f69190614f5e565b60405180910390f35b610507612a84565b6040516105149190614f5e565b60405180910390f35b61053760048036038101906105329190614f05565b612a8a565b6040516105449190614f5e565b60405180910390f35b610555612aaf565b60405161056291906150c8565b60405180910390f35b6105856004803603810190610580919061500f565b612ad5565b6040516105929190614f5e565b60405180910390f35b6105b560048036038101906105b0919061500f565b612aed565b6040516105c29190614f5e565b60405180910390f35b6105e560048036038101906105e0919061500f565b612b05565b6040516105f29190614f5e565b60405180910390f35b6106156004803603810190610610919061500f565b612c36565b005b610631600480360381019061062c919061500f565b612ca9565b60405161063e9190614f5e565b60405180910390f35b610661600480360381019061065c919061503c565b612d26565b005b61066b612e11565b6040516106789190614f88565b60405180910390f35b61069b6004803603810190610696919061500f565b612e37565b6040516106a89190614f5e565b60405180910390f35b6106cb60048036038101906106c6919061500f565b612efd565b6040516106d89190614f5e565b60405180910390f35b6106fb60048036038101906106f6919061500f565b613000565b6040516107089190614f5e565b60405180910390f35b61072b6004803603810190610726919061500f565b6130cd565b6040516107389190614f5e565b60405180910390f35b61075b60048036038101906107569190614fcf565b6130f9565b005b61077760048036038101906107729190614fcf565b613501565b005b610793600480360381019061078e919061500f565b613723565b005b61079d6137f7565b6040516107aa9190615104565b60405180910390f35b6107bb61381d565b6040516107c89190615104565b60405180910390f35b6107eb60048036038101906107e6919061500f565b613843565b6040516107f89190614f5e565b60405180910390f35b6108096138fb565b005b61082560048036038101906108209190614f05565b6139f3565b6040516108329190614f5e565b60405180910390f35b6108556004803603810190610850919061500f565b613a54565b604051610862919061512e565b60405180910390f35b610873613a74565b6040516108809190614f5e565b60405180910390f35b610891613c4f565b60405161089e919061516a565b60405180910390f35b6108af613c75565b6040516108bc9190614f5e565b60405180910390f35b6108df60048036038101906108da919061500f565b613de4565b6040516108ec9190614f5e565b60405180910390f35b61090f600480360381019061090a919061500f565b613dfc565b60405161091c9190614f5e565b60405180910390f35b61093f600480360381019061093a9190614fcf565b613e14565b005b610949614297565b6040516109569190614f5e565b60405180910390f35b6109796004803603810190610974919061500f565b614703565b6040516109869190614f5e565b60405180910390f35b6109a960048036038101906109a4919061500f565b61492b565b005b6109b3614a16565b6040516109c091906151a6565b60405180910390f35b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a509061521e565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000610b66670de0b6b3a7640000610b58610acd85613843565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a3c90919063ffffffff16565b614a5290919063ffffffff16565b905092915050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d7a610d6b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a9190615253565b610d5d600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d059190614f88565b602060405180830381865afa158015610d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d469190615253565b610d4f88612b05565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b83614a6890919063ffffffff16565b9050610d863384610ab3565b610de4600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a610dd591906153e2565b84614a3c90919063ffffffff16565b1115610e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1c90615479565b60405180910390fd5b610eb7610e3184613843565b610ea9600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a610e8091906153e2565b610e9b670de0b6b3a764000087614a3c90919063ffffffff16565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f429190615499565b92505081905550610f5283613000565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa091906154cd565b9250508190555042600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611049600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61103a91906153e2565b83614a3c90919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110979190615499565b925050819055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110db93929190615523565b6020604051808303816000875af11580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e919061556f565b50601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639aa4986484611172600485614a5290919063ffffffff16565b6040518363ffffffff1660e01b815260040161118f92919061559c565b600060405180830381600087803b1580156111a957600080fd5b505af11580156111bd573d6000803e3d6000fd5b505050506111e860046111da600384614a3c90919063ffffffff16565b614a5290919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461123691906154cd565b92505081905550611245614a7e565b505050565b600061128a670de0b6b3a764000061127c61126485614d4a565b61126e8787610ab3565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b905092915050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a76400006112d782612e37565b10611317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130e90615611565b60405180910390fd5b600061132282612848565b905060008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb9190615253565b811015611a365760006113ce868461124a565b1115611a2357600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0826040518263ffffffff1660e01b815260040161142f9190614f5e565b602060405180830381865afa15801561144c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114709190615646565b9150600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f3aa554836115ad8761159f6114c28b8961124a565b6115916114e7670de0b6b3a76400006114d9613c75565b614a5290919063ffffffff16565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318f6040518263ffffffff1660e01b81526004016115429190614f88565b602060405180830381865afa15801561155f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115839190615253565b614a3c90919063ffffffff16565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b6001306040518563ffffffff1660e01b81526004016115cf94939291906156ae565b6020604051808303816000875af11580156115ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116129190615253565b92508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33611658606461164a600589614a3c90919063ffffffff16565b614a5290919063ffffffff16565b6040518363ffffffff1660e01b815260040161167592919061559c565b6020604051808303816000875af1158015611694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b8919061556f565b508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661171f6064611711600589614a3c90919063ffffffff16565b614a5290919063ffffffff16565b6040518363ffffffff1660e01b815260040161173c92919061559c565b6020604051808303816000875af115801561175b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177f919061556f565b5061178982613000565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117d791906154cd565b9250508190555042600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118ed9190615499565b925050819055506000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119c591906154cd565b9250508190555082600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a1b9190615499565b925050819055505b8080611a2e906156f3565b91505061132a565b5050505050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afa9190615253565b811015611d41576000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0836040518263ffffffff1660e01b8152600401611b5e9190614f5e565b602060405180830381865afa158015611b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9f9190615646565b9050611d206ec097ce7bc90715b34b9f1000000000611d12611bc084614d4a565b611d04611bcc86614703565b611cf6600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318d6040518263ffffffff1660e01b8152600401611c679190614f88565b602060405180830381865afa158015611c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca89190615253565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a3c90919063ffffffff16565b614a3c90919063ffffffff16565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b83611d2b91906154cd565b9250508080611d39906156f3565b915050611a69565b5080915050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ddb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd29061521e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ea9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ea09061521e565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506120008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff09190615253565b6012614a6890919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016120c092919061559c565b6020604051808303816000875af11580156120df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612103919061556f565b505050565b60075481565b61216c600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61215d91906153e2565b82614a3c90919063ffffffff16565b61217633846139f3565b10156121b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ae90615788565b60405180910390fd5b6121c082613000565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461220e91906154cd565b9250508190555042600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122b7600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a6122a891906153e2565b82614a3c90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461230591906154cd565b9250508190555061239e61231883613843565b612390612381600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61236a91906153e2565b670de0b6b3a7640000614a3c90919063ffffffff16565b84614a3c90919063ffffffff16565b614a5290919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461242991906154cd565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161246b92919061559c565b6020604051808303816000875af115801561248a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ae919061556f565b505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161253892919061559c565b600060405180830381600087803b15801561255257600080fd5b505af1158015612566573d6000803e3d6000fd5b5050505060006125a0670de0b6b3a7640000612592612583613c75565b86614a3c90919063ffffffff16565b614a5290919063ffffffff16565b90506000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630f3aa554600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846001336040518563ffffffff1660e01b815260040161262894939291906156ae565b6020604051808303816000875af1158015612647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266b9190615253565b9050816007600082825461267f9190615499565b92505081905550670de0b6b3a764000061269833612e37565b10156126d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d09061581a565b60405180910390fd5b8092505050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276a9061521e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127fb90615886565b60405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128df9190615253565b811015612a7a57612a5a670de0b6b3a7640000612a4c612999600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0866040518263ffffffff1660e01b81526004016129539190614f5e565b602060405180830381865afa158015612970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129949190615646565b614d4a565b612a3e88600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0886040518263ffffffff1660e01b81526004016129f89190614f5e565b602060405180830381865afa158015612a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a399190615646565b610ab3565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b82612a6591906154cd565b91508080612a72906156f3565b91505061284e565b5080915050919050565b600e5481565b6005602052816000526040600020602052806000526040600020600091509150505481565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60026020528060005260406000206000915090505481565b6000612c2f612be1600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a612b5991906153e2565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612b929190614f88565b602060405180830381865afa158015612baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd39190615253565b614a3c90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a6890919063ffffffff16565b9050919050565b612ca681612ca1600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a612c8991906153e2565b612c933386610ab3565b614a5290919063ffffffff16565b610b94565b50565b6000612d1f600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d11670de0b6b3a7640000612d0386612b05565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b9050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612db6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dad9061521e565b60405180910390fd5b605a8111158015612dc8575060328110155b612e07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dfe906158f2565b60405180910390fd5b80600e8190555050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080612e4383612848565b1415612e5a5768056bc75e2d631000009050612ef8565b68056bc75e2d63100000612ea1612e7084612848565b612e93670de0b6b3a7640000612e8587612efd565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b1115612eb85768056bc75e2d631000009050612ef8565b612ef5612ec483612848565b612ee7670de0b6b3a7640000612ed986612efd565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b90505b919050565b600080612ff56064612fe7600e54612fd9612f16614297565b612fcb612f21613c75565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318c6040518263ffffffff1660e01b8152600401612f7c9190614f88565b602060405180830381865afa158015612f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fbd9190615253565b614a3c90919063ffffffff16565b614a3c90919063ffffffff16565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b905080915050919050565b600080613055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442614a6890919063ffffffff16565b905060006130c16301e133806130b384600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a3c90919063ffffffff16565b614a5290919063ffffffff16565b90508092505050919050565b60006130f26130db83612848565b6130e484612efd565b614a6890919063ffffffff16565b9050919050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef5cfb8c336040518263ffffffff1660e01b81526004016131549190614f88565b600060405180830381600087803b15801561316e57600080fd5b505af1158015613182573d6000803e3d6000fd5b5050505060008190506131e9600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a6131da91906153e2565b83614a3c90919063ffffffff16565b9150600115156000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461327d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132749061595e565b60405180910390fd5b60006132b461328b85614703565b6132a6670de0b6b3a764000086614a3c90919063ffffffff16565b614a5290919063ffffffff16565b90506132bf84613000565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461330d91906154cd565b9250508190555042600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161339593929190615523565b6020604051808303816000875af11580156133b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133d8919061556f565b50600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161347392919061559c565b600060405180830381600087803b15801561348d57600080fd5b505af11580156134a1573d6000803e3d6000fd5b5050505082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546134f491906154cd565b9250508190555050505050565b6000600754111561351557613514614a7e565b5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161355293929190615523565b6020604051808303816000875af1158015613571573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613595919061556f565b50600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663364e23118383600060016040518563ffffffff1660e01b81526004016135f994939291906159b9565b6020604051808303816000875af1158015613618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061363c9190615253565b9050600061367461364b613c75565b613666670de0b6b3a764000085614a3c90919063ffffffff16565b614a5290919063ffffffff16565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016136d392919061559c565b600060405180830381600087803b1580156136ed57600080fd5b505af1158015613701573d6000803e3d6000fd5b50505050816007600082825461371791906154cd565b92505081905550505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146137b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137aa9061521e565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061384f83612b05565b141561386557670de0b6b3a764000090506138f6565b6138f361387183612b05565b6138e5670de0b6b3a76400006138d761388987613000565b600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614e1490919063ffffffff16565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b90505b919050565b600061390633612848565b14613946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161393d90615a4a565b60405180910390fd5b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016139a39190614f88565b602060405180830381865afa1580156139c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139e49190615253565b90506139ef816124d9565b5050565b6000613a4c613a0183614d4a565b613a3e670de0b6b3a7640000613a30613a1988612848565b613a2289612efd565b614a6890919063ffffffff16565b614a3c90919063ffffffff16565b614a5290919063ffffffff16565b905092915050565b60006020528060005260406000206000915054906101000a900460ff1681565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b0b9190615253565b811015613c47576000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0836040518263ffffffff1660e01b8152600401613b6f9190614f5e565b602060405180830381865afa158015613b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bb09190615646565b9050613c26670de0b6b3a7640000613c18613bca84614d4a565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a3c90919063ffffffff16565b614a5290919063ffffffff16565b83613c3191906154cd565b9250508080613c3f906156f3565b915050613a7a565b508091505090565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ce5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d099190615253565b1415613d1f57670de0b6b3a76400009050613de1565b613dde600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613db39190615253565b613dd0670de0b6b3a7640000600754614a3c90919063ffffffff16565b614a5290919063ffffffff16565b90505b90565b60036020528060005260406000206000915090505481565b60066020528060005260406000206000915090505481565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef5cfb8c336040518263ffffffff1660e01b8152600401613e6f9190614f88565b600060405180830381600087803b158015613e8957600080fd5b505af1158015613e9d573d6000803e3d6000fd5b505050506000613ed8670de0b6b3a7640000613eca613ebb86614703565b85614a3c90919063ffffffff16565b614a5290919063ffffffff16565b9050613fb1600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a613f2991906153e2565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401613f629190614f88565b602060405180830381865afa158015613f7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613fa39190615253565b614a3c90919063ffffffff16565b8111613ff2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613fe990615adc565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161408c92919061559c565b600060405180830381600087803b1580156140a657600080fd5b505af11580156140ba573d6000803e3d6000fd5b5050505080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461410d9190615499565b9250508190555061411d83613000565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461416b91906154cd565b9250508190555042600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33614231600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61422291906153e2565b85614a5290919063ffffffff16565b6040518363ffffffff1660e01b815260040161424e92919061559c565b6020604051808303816000875af115801561426d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614291919061556f565b50505050565b60008060005b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa15801561430a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061432e9190615253565b8110156146395761461961456760036000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0866040518263ffffffff1660e01b815260040161439a9190614f5e565b602060405180830381865afa1580156143b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143db9190615646565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a61442291906153e2565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0856040518263ffffffff1660e01b815260040161447d9190614f5e565b602060405180830381865afa15801561449a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144be9190615646565b73ffffffffffffffffffffffffffffffffffffffff166370a08231600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016145189190614f88565b602060405180830381865afa158015614535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145599190615253565b614a3c90919063ffffffff16565b61460b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e468baf0856040518263ffffffff1660e01b81526004016145c59190614f5e565b602060405180830381865afa1580156145e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146069190615646565b614d4a565b614a3c90919063ffffffff16565b8261462491906154cd565b91508080614631906156f3565b91505061429d565b5060006146f9600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156146ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146d09190615253565b6146eb670de0b6b3a764000085614a3c90919063ffffffff16565b614a5290919063ffffffff16565b9050809250505090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156147b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147d49190615253565b14156147ea57670de0b6b3a76400009050614926565b614923600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015614897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148bb9190615253565b614915670de0b6b3a7640000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a3c90919063ffffffff16565b614a5290919063ffffffff16565b90505b919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016149c59190614f88565b602060405180830381865afa1580156149e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a069190615253565b9050614a128282613e14565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008183614a4a9190615afc565b905092915050565b60008183614a609190615b85565b905092915050565b60008183614a769190615499565b905092915050565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401614adb9190614f88565b602060405180830381865afa158015614af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b1c9190615253565b9050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330b7000260008060018060018060006040518863ffffffff1660e01b8152600401614b899796959493929190615bb6565b600060405180830381600087803b158015614ba357600080fd5b505af1158015614bb7573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663364e2311600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614cca84600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401614c7b9190614f88565b602060405180830381865afa158015614c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614cbc9190615253565b614a6890919063ffffffff16565b6001806040518563ffffffff1660e01b8152600401614cec9493929190615c25565b6020604051808303816000875af1158015614d0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614d2f9190615253565b60076000828254614d4091906154cd565b9250508190555050565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632fc3a70a846000600160006040518563ffffffff1660e01b8152600401614db19493929190615c6a565b602060405180830381865afa158015614dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614df29190615253565b9050614e0c64e8d4a5100082614a5290919063ffffffff16565b915050919050565b60008183614e2291906154cd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000614e5a82614e2f565b9050919050565b614e6a81614e4f565b8114614e7557600080fd5b50565b600081359050614e8781614e61565b92915050565b60008115159050919050565b614ea281614e8d565b8114614ead57600080fd5b50565b600081359050614ebf81614e99565b92915050565b60008060408385031215614edc57614edb614e2a565b5b6000614eea85828601614e78565b9250506020614efb85828601614eb0565b9150509250929050565b60008060408385031215614f1c57614f1b614e2a565b5b6000614f2a85828601614e78565b9250506020614f3b85828601614e78565b9150509250929050565b6000819050919050565b614f5881614f45565b82525050565b6000602082019050614f736000830184614f4f565b92915050565b614f8281614e4f565b82525050565b6000602082019050614f9d6000830184614f79565b92915050565b614fac81614f45565b8114614fb757600080fd5b50565b600081359050614fc981614fa3565b92915050565b60008060408385031215614fe657614fe5614e2a565b5b6000614ff485828601614e78565b925050602061500585828601614fba565b9150509250929050565b60006020828403121561502557615024614e2a565b5b600061503384828501614e78565b91505092915050565b60006020828403121561505257615051614e2a565b5b600061506084828501614fba565b91505092915050565b6000819050919050565b600061508e61508961508484614e2f565b615069565b614e2f565b9050919050565b60006150a082615073565b9050919050565b60006150b282615095565b9050919050565b6150c2816150a7565b82525050565b60006020820190506150dd60008301846150b9565b92915050565b60006150ee82615095565b9050919050565b6150fe816150e3565b82525050565b600060208201905061511960008301846150f5565b92915050565b61512881614e8d565b82525050565b6000602082019050615143600083018461511f565b92915050565b600061515482615095565b9050919050565b61516481615149565b82525050565b600060208201905061517f600083018461515b565b92915050565b600061519082615095565b9050919050565b6151a081615185565b82525050565b60006020820190506151bb6000830184615197565b92915050565b600082825260208201905092915050565b7f21476f7665726e616e6365000000000000000000000000000000000000000000600082015250565b6000615208600b836151c1565b9150615213826151d2565b602082019050919050565b60006020820190508181036000830152615237816151fb565b9050919050565b60008151905061524d81614fa3565b92915050565b60006020828403121561526957615268614e2a565b5b60006152778482850161523e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115615306578086048111156152e2576152e1615280565b5b60018516156152f15780820291505b80810290506152ff856152af565b94506152c6565b94509492505050565b60008261531f57600190506153db565b8161532d57600090506153db565b8160018114615343576002811461534d5761537c565b60019150506153db565b60ff84111561535f5761535e615280565b5b8360020a91508482111561537657615375615280565b5b506153db565b5060208310610133831016604e8410600b84101617156153b15782820a9050838111156153ac576153ab615280565b5b6153db565b6153be84848460016152bc565b925090508184048111156153d5576153d4615280565b5b81810290505b9392505050565b60006153ed82614f45565b91506153f883614f45565b92506154257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461530f565b905092915050565b7f5265706179696e6720746f6f206d756368000000000000000000000000000000600082015250565b60006154636011836151c1565b915061546e8261542d565b602082019050919050565b6000602082019050818103600083015261549281615456565b9050919050565b60006154a482614f45565b91506154af83614f45565b9250828210156154c2576154c1615280565b5b828203905092915050565b60006154d882614f45565b91506154e383614f45565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561551857615517615280565b5b828201905092915050565b60006060820190506155386000830186614f79565b6155456020830185614f79565b6155526040830184614f4f565b949350505050565b60008151905061556981614e99565b92915050565b60006020828403121561558557615584614e2a565b5b60006155938482850161555a565b91505092915050565b60006040820190506155b16000830185614f79565b6155be6020830184614f4f565b9392505050565b7f4163636f756e74206865616c7468790000000000000000000000000000000000600082015250565b60006155fb600f836151c1565b9150615606826155c5565b602082019050919050565b6000602082019050818103600083015261562a816155ee565b9050919050565b60008151905061564081614e61565b92915050565b60006020828403121561565c5761565b614e2a565b5b600061566a84828501615631565b91505092915050565b6000819050919050565b600061569861569361568e84615673565b615069565b614f45565b9050919050565b6156a88161567d565b82525050565b60006080820190506156c36000830187614f79565b6156d06020830186614f4f565b6156dd604083018561569f565b6156ea6060830184614f79565b95945050505050565b60006156fe82614f45565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561573157615730615280565b5b600182019050919050565b7f4e6f7420656e6f75676820626f72726f77696e6720706f776572000000000000600082015250565b6000615772601a836151c1565b915061577d8261573c565b602082019050919050565b600060208201905081810360008301526157a181615765565b9050919050565b7f4163636f756e74206e6f74206865616c7468792061667465722077697468647260008201527f6177000000000000000000000000000000000000000000000000000000000000602082015250565b60006158046022836151c1565b915061580f826157a8565b604082019050919050565b60006020820190508181036000830152615833816157f7565b9050919050565b7f474c5020536861726520616c7265616479207365742100000000000000000000600082015250565b60006158706016836151c1565b915061587b8261583a565b602082019050919050565b6000602082019050818103600083015261589f81615863565b9050919050565b7f496e76616c6964204c5456000000000000000000000000000000000000000000600082015250565b60006158dc600b836151c1565b91506158e7826158a6565b602082019050919050565b6000602082019050818103600083015261590b816158cf565b9050919050565b7f546f6b656e206e6f7420616c6c6f776564000000000000000000000000000000600082015250565b60006159486011836151c1565b915061595382615912565b602082019050919050565b600060208201905081810360008301526159778161593b565b9050919050565b6000819050919050565b60006159a361599e6159998461597e565b615069565b614f45565b9050919050565b6159b381615988565b82525050565b60006080820190506159ce6000830187614f79565b6159db6020830186614f4f565b6159e860408301856159aa565b6159f5606083018461569f565b95945050505050565b7f4163636f756e7420686173206465627400000000000000000000000000000000600082015250565b6000615a346010836151c1565b9150615a3f826159fe565b602082019050919050565b60006020820190508181036000830152615a6381615a27565b9050919050565b7f546f6f206d75636820626f72726f7765642066726f6d206c697175696469747960008201527f20746f2077697468647261770000000000000000000000000000000000000000602082015250565b6000615ac6602c836151c1565b9150615ad182615a6a565b604082019050919050565b60006020820190508181036000830152615af581615ab9565b9050919050565b6000615b0782614f45565b9150615b1283614f45565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615b4b57615b4a615280565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000615b9082614f45565b9150615b9b83614f45565b925082615bab57615baa615b56565b5b828204905092915050565b600060e082019050615bcb600083018a61511f565b615bd8602083018961511f565b615be5604083018861511f565b615bf2606083018761511f565b615bff608083018661511f565b615c0c60a083018561511f565b615c1960c083018461511f565b98975050505050505050565b6000608082019050615c3a6000830187614f79565b615c476020830186614f4f565b615c54604083018561569f565b615c61606083018461569f565b95945050505050565b6000608082019050615c7f6000830187614f79565b615c8c602083018661511f565b615c99604083018561511f565b615ca6606083018461511f565b9594505050505056fea2646970667358221220d0e8162f40c6099f56f90c260a3cba51fd850964096b597b4d4bb76c28adc11c64736f6c634300080a0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 492,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowToken",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 496,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowShare",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 500,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowTokenBalance",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 504,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "decimalMultiplier",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 508,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "tokenDebt",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 514,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "borrowedAmount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 518,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "interestCheckpoint",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 520,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "totalCollateral",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 522,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "governance",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 525,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "vault",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(IVault)413"
      },
      {
        "astId": 528,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "rewardsRouter",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IRewardsRouter)471"
      },
      {
        "astId": 531,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "GLPShare",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(IERC20)400"
      },
      {
        "astId": 534,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "GLP",
        "offset": 0,
        "slot": "12",
        "type": "t_contract(IERC20)400"
      },
      {
        "astId": 536,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "weth",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 539,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "ltv",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 541,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "lnxReward",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 543,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "stakeReward",
        "offset": 0,
        "slot": "16",
        "type": "t_address"
      },
      {
        "astId": 546,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "priceFeed",
        "offset": 0,
        "slot": "17",
        "type": "t_contract(IPriceFeed)427"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)400": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceFeed)427": {
        "encoding": "inplace",
        "label": "contract IPriceFeed",
        "numberOfBytes": "20"
      },
      "t_contract(IRewardsRouter)471": {
        "encoding": "inplace",
        "label": "contract IRewardsRouter",
        "numberOfBytes": "20"
      },
      "t_contract(IVault)413": {
        "encoding": "inplace",
        "label": "contract IVault",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}